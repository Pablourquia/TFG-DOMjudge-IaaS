<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/home/usuario/domjudge-8.2.3/webapp</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</parameter>
    <parameter key="kernel.cache_dir">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/home/usuario/domjudge-8.2.3/webapp/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SentryBundle">Sentry\SentryBundle\SentryBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="NelmioApiDocBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/nelmio/api-doc-bundle</parameter>
        <parameter key="namespace">Nelmio\ApiDocBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/twig/extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SentryBundle" type="collection">
        <parameter key="path">/home/usuario/domjudge-8.2.3/lib/vendor/sentry/sentry-symfony/src</parameter>
        <parameter key="namespace">Sentry\SentryBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="removed_intervals">false</parameter>
    <parameter key="domjudge.version">8.2.3</parameter>
    <parameter key="domjudge.bindir">/home/usuario/domjudge-8.2.3/bin</parameter>
    <parameter key="domjudge.etcdir">/home/usuario/domjudge-8.2.3/etc</parameter>
    <parameter key="domjudge.webappdir">/home/usuario/domjudge-8.2.3/webapp</parameter>
    <parameter key="domjudge.libdir">/home/usuario/domjudge-8.2.3/lib</parameter>
    <parameter key="domjudge.sqldir">/home/usuario/domjudge-8.2.3/sql</parameter>
    <parameter key="domjudge.libvendordir">/home/usuario/domjudge-8.2.3/lib/vendor</parameter>
    <parameter key="domjudge.logdir">/home/usuario/domjudge-8.2.3/output/log</parameter>
    <parameter key="domjudge.rundir">/home/usuario/domjudge-8.2.3/output/run</parameter>
    <parameter key="domjudge.tmpdir">/home/usuario/domjudge-8.2.3/output/tmp</parameter>
    <parameter key="domjudge.baseurl">http://localhost/domjudge/</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="tinyint" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\TinyIntType</parameter>
      </parameter>
      <parameter key="blobtext" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\BlobTextType</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\JsonType</parameter>
      </parameter>
      <parameter key="binaryjson" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\BinaryJsonType</parameter>
      </parameter>
      <parameter key="internal_error_status" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\InternalErrorStatusType</parameter>
      </parameter>
      <parameter key="judge_task_type" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\JudgeTaskType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.enable_lazy_ghost_objects">false</parameter>
    <parameter key="doctrine.orm.proxy_dir">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="jms_serializer.twig_enabled">default</parameter>
    <parameter key="nelmio_api_doc.areas" type="collection">
      <parameter>default</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.use_validation_groups">false</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
          <parameter>request</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.event_feed_importer" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event-feed-importer</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="cache.prefix.seed">_/home/usuario/domjudge-8.2.3/webapp.App_KernelDevDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_main_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/profiler</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>form_theme.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/usuario/domjudge-8.2.3/webapp/templates</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_JURY" type="collection">
        <parameter>ROLE_CLARIFICATION_RW</parameter>
        <parameter>ROLE_API</parameter>
        <parameter>ROLE_API_READER</parameter>
        <parameter>ROLE_API_SOURCE_READER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_JURY</parameter>
        <parameter>ROLE_JUDGEHOST</parameter>
        <parameter>ROLE_API_WRITER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>api</parameter>
      <parameter>metrics</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="sentry.tracing.enabled">true</parameter>
    <parameter key="sentry.tracing.dbal.enabled">true</parameter>
    <parameter key="sentry.tracing.dbal.connections" type="collection"/>
    <parameter key="sentry.tracing.cache.enabled">true</parameter>
    <parameter key="sentry.tracing.http_client.enabled">true</parameter>
    <parameter key="maker.compatible_check.doctrine.supports_attributes">true</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="jms_serializer.data_collector" type="collection">
        <parameter>jms_serializer</parameter>
        <parameter>@JMSSerializer/Collector/panel.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="domjudge.doc_links" type="collection"/>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Command\CallApiActionCommand</parameter>
      <parameter>console.command.public_alias.App\Command\CheckDatabaseConfigurationDefaultValuesCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ImportEventFeedCommand</parameter>
      <parameter>console.command.public_alias.App\Command\LoadDefaultDataCommand</parameter>
      <parameter>console.command.public_alias.App\Command\LoadDevelopmentDataCommand</parameter>
      <parameter>console.command.public_alias.App\Command\LoadExampleDataCommand</parameter>
      <parameter>console.command.public_alias.App\Command\LoadGatlingDataCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ResetUserPasswordCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ScoreboardMergeCommand</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="prometheus_storage" class="Prometheus\Storage\InMemory"/>
    <service id="prometheus_collector_registry_service" class="Prometheus\CollectorRegistry" public="true">
      <argument type="service" id="prometheus_storage"/>
    </service>
    <service id="Sentry\Integration\IgnoreErrorsIntegration" class="Sentry\Integration\IgnoreErrorsIntegration">
      <argument type="collection">
        <argument key="ignore_exceptions" type="collection">
          <argument>Symfony\Component\Security\Core\Exception\AccessDeniedException</argument>
        </argument>
      </argument>
    </service>
    <service id="Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Command\CallApiActionCommand" class="App\Command\CallApiActionCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="App\Service\ExternalContestSourceService"/>
    </service>
    <service id="App\Command\LoadDefaultDataCommand" class="App\Command\LoadDefaultDataCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Command\LoadDevelopmentDataCommand" class="App\Command\LoadDevelopmentDataCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Command\LoadGatlingDataCommand" class="App\Command\LoadGatlingDataCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="twig"/>
      <argument type="service" id=".sentry.traceable.http_client"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="router.default"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
    </service>
    <service id="App\Config\Loader\YamlConfigLoader" class="App\Config\Loader\YamlConfigLoader" autowire="true" autoconfigure="true"/>
    <service id="App\Config\OptionalFileResource" class="App\Config\OptionalFileResource" autowire="true" autoconfigure="true"/>
    <service id="App\Controller\API\AccessController" class="App\Controller\API\AccessController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\AccessController"/>
      </call>
    </service>
    <service id="App\Controller\API\AccountController" class="App\Controller\API\AccountController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\AccountController"/>
      </call>
    </service>
    <service id="App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\AwardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\AwardsController"/>
      </call>
    </service>
    <service id="App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\BalloonController"/>
      </call>
    </service>
    <service id="App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\API\ContestController" class="App\Controller\API\ContestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\ContestController"/>
      </call>
    </service>
    <service id="App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\ExecutableController"/>
      </call>
    </service>
    <service id="App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\CheckConfigService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\GeneralInfoController"/>
      </call>
    </service>
    <service id="App\Controller\API\GroupController" class="App\Controller\API\GroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\GroupController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\BalloonService"/>
      <argument type="service" id="App\Service\RejudgingService"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\JudgehostController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\JudgementController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\JudgementTypeController"/>
      </call>
    </service>
    <service id="App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\LanguageController"/>
      </call>
    </service>
    <service id="App\Controller\API\MetricsController" class="App\Controller\API\MetricsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="prometheus_collector_registry_service"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\MetricsController"/>
      </call>
    </service>
    <service id="App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\OrganizationController"/>
      </call>
    </service>
    <service id="App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\API\RunController" class="App\Controller\API\RunController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\RunController"/>
      </call>
    </service>
    <service id="App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\SubmissionController"/>
      </call>
    </service>
    <service id="App\Controller\API\TeamController" class="App\Controller\API\TeamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\TeamController"/>
      </call>
    </service>
    <service id="App\Controller\API\UserController" class="App\Controller\API\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.7F_Lccs.App\Controller\API\UserController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\StatisticsService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\AnalysisController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\AuditLogController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\BalloonController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\CheckConfigService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.MHEFf7Z.App\Controller\Jury\ConfigController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ContestController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\CreateQuizController" class="App\Controller\Jury\CreateQuizController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\CreateQuizController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ExecutableController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ExternalContestController" class="App\Controller\Jury\ExternalContestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\ExternalContestSourceService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ExternalContestController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\ICPCCmsService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <argument>8.2.3</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ImportExportController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\RejudgingService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\InternalErrorController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\JudgehostController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\JuryMiscController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\LanguageController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\PrintController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\QueueTaskController" class="App\Controller\Jury\QueueTaskController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\QueueTaskController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\RejudgingService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\RejudgingController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\ShadowDifferencesController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="router.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\SubmissionController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.dBKW74W.App\Controller\Jury\TeamAffiliationController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\TeamCategoryController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AssetUpdateService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\TeamController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="security.token_storage"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Jury\UserController"/>
      </call>
    </service>
    <service id="App\Controller\PublicController" class="App\Controller\PublicController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\StatisticsService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.5QJi0SZ.App\Controller\PublicController"/>
      </call>
    </service>
    <service id="App\Controller\RootController" class="App\Controller\RootController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\RootController"/>
      </call>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="form.factory"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Team\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Team\MiscController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\StatisticsService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Team\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Team\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="form.factory"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.9hK1Zku.App\Controller\Team\SubmissionController"/>
      </call>
    </service>
    <service id="App\DataFixtures\DefaultData\ExecutableFixture" class="App\DataFixtures\DefaultData\ExecutableFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument>/home/usuario/domjudge-8.2.3/sql</argument>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\DefaultData\LanguageFixture" class="App\DataFixtures\DefaultData\LanguageFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument>/home/usuario/domjudge-8.2.3/sql</argument>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\DefaultData\RoleFixture" class="App\DataFixtures\DefaultData\RoleFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\DefaultData\TeamCategoryFixture" class="App\DataFixtures\DefaultData\TeamCategoryFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\DefaultData\TeamFixture" class="App\DataFixtures\DefaultData\TeamFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\DataFixtures\DefaultData\UserFixture" class="App\DataFixtures\DefaultData\UserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument>true</argument>
    </service>
    <service id="App\DataFixtures\ExampleData\JudgehostFixture" class="App\DataFixtures\ExampleData\JudgehostFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ExampleData\TeamAffiliationFixture" class="App\DataFixtures\ExampleData\TeamAffiliationFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ExampleData\TeamCategoryFixture" class="App\DataFixtures\ExampleData\TeamCategoryFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ExampleData\TeamFixture" class="App\DataFixtures\ExampleData\TeamFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ExampleData\UserFixture" class="App\DataFixtures\ExampleData\UserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\AddMoreDemoUsersFixture" class="App\DataFixtures\Test\AddMoreDemoUsersFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\AddProblemAttachmentFixture" class="App\DataFixtures\Test\AddProblemAttachmentFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\BalloonCorrectSubmissionFixture" class="App\DataFixtures\Test\BalloonCorrectSubmissionFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\BalloonUserFixture" class="App\DataFixtures\Test\BalloonUserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\ClarificationFixture" class="App\DataFixtures\Test\ClarificationFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\ContestTimeFixture" class="App\DataFixtures\Test\ContestTimeFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoNonPublicContestFixture" class="App\DataFixtures\Test\DemoNonPublicContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPostDeactivateContestFixture" class="App\DataFixtures\Test\DemoPostDeactivateContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreActivationContestFixture" class="App\DataFixtures\Test\DemoPreActivationContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreDeactivateContestFixture" class="App\DataFixtures\Test\DemoPreDeactivateContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreEndContestFixture" class="App\DataFixtures\Test\DemoPreEndContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreFreezeContestFixture" class="App\DataFixtures\Test\DemoPreFreezeContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreStartContestFixture" class="App\DataFixtures\Test\DemoPreStartContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DemoPreUnfreezeContestFixture" class="App\DataFixtures\Test\DemoPreUnfreezeContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\DummyProblemFixture" class="App\DataFixtures\Test\DummyProblemFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\EnableJavaEntrypointFixture" class="App\DataFixtures\Test\EnableJavaEntrypointFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\EnableKotlinFixture" class="App\DataFixtures\Test\EnableKotlinFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\EnableSelfregisterFixture" class="App\DataFixtures\Test\EnableSelfregisterFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" class="App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" class="App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\ExtraJudgehostFixture" class="App\DataFixtures\Test\ExtraJudgehostFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\LockedContestFixture" class="App\DataFixtures\Test\LockedContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\RejudgingStatesFixture" class="App\DataFixtures\Test\RejudgingStatesFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" class="App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" class="App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleAffiliationsFixture" class="App\DataFixtures\Test\SampleAffiliationsFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleEventsFixture" class="App\DataFixtures\Test\SampleEventsFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleSubmissionsFixture" class="App\DataFixtures\Test\SampleSubmissionsFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" class="App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" class="App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\Test\SelfRegisteredUserFixture" class="App\DataFixtures\Test\SelfRegisteredUserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\Doctrine\DBAL\Types\BinaryJsonType" class="App\Doctrine\DBAL\Types\BinaryJsonType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\BlobTextType" class="App\Doctrine\DBAL\Types\BlobTextType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\InternalErrorStatusType" class="App\Doctrine\DBAL\Types\InternalErrorStatusType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\JsonType" class="App\Doctrine\DBAL\Types\JsonType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\JudgeTaskType" class="App\Doctrine\DBAL\Types\JudgeTaskType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\TinyIntType" class="App\Doctrine\DBAL\Types\TinyIntType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\HashPasswordSubscriber" class="App\Doctrine\HashPasswordSubscriber" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="App\Doctrine\ORM\Query\AST\Functions\RightFunction" class="App\Doctrine\ORM\Query\AST\Functions\RightFunction" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\ORM\Query\AST\Functions\TruncateFunction" class="App\Doctrine\ORM\Query\AST\Functions\TruncateFunction" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\AddContentSecurityPolicyListener" class="App\EventListener\AddContentSecurityPolicyListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="App\EventListener\AddCurrentContestListener" class="App\EventListener\AddCurrentContestListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
    </service>
    <service id="App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\Form\Extension\IconButtonExtension" class="App\Form\Extension\IconButtonExtension" autowire="true" autoconfigure="true">
      <tag name="form.type_extension"/>
    </service>
    <service id="App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
    </service>
    <service id="App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ExternalContestSourceType" class="App\Form\Type\ExternalContestSourceType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ExternalSourceWarningsFilterType" class="App\Form\Type\ExternalSourceWarningsFilterType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ICPCCmsType" class="App\Form\Type\ICPCCmsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\ProblemAttachmentType" class="App\Form\Type\ProblemAttachmentType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ProblemsImportType" class="App\Form\Type\ProblemsImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\SubmissionsFilterType" class="App\Form\Type\SubmissionsFilterType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
    </service>
    <service id="App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
    </service>
    <service id="App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Helpers\ContestProblemWrapper" class="App\Helpers\ContestProblemWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\JudgingRunWrapper" class="App\Helpers\JudgingRunWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\JudgingWrapper" class="App\Helpers\JudgingWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\OrdinalArray" class="App\Helpers\OrdinalArray" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\OrdinalItem" class="App\Helpers\OrdinalItem" autowire="true" autoconfigure="true"/>
    <service id="App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" autoconfigure="true">
      <tag name="monolog.processor"/>
    </service>
    <service id="App\Security\DOMJudgeBasicAuthenticator" class="App\Security\DOMJudgeBasicAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.helper"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="App\Security\DOMJudgeIPAuthenticator" class="App\Security\DOMJudgeIPAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
    </service>
    <service id="App\Security\DOMJudgeXHeadersAuthenticator" class="App\Security\DOMJudgeXHeadersAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.helper"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Security\UserChecker" class="App\Security\UserChecker" autowire="true" autoconfigure="true"/>
    <service id="App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Serializer\TeamAffiliationVisitor" class="App\Serializer\TeamAffiliationVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Serializer\TeamVisitor" class="App\Serializer\TeamVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Service\AssetUpdateService" class="App\Service\AssetUpdateService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Service\AwardService" class="App\Service\AwardService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Service\BalloonService" class="App\Service\BalloonService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Service\CheckConfigService" class="App\Service\CheckConfigService" autowire="true" autoconfigure="true">
      <argument>true</argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="security.user_password_hasher"/>
    </service>
    <service id="App\Service\ConfigurationService" class="App\Service\ConfigurationService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="config_cache_factory"/>
      <argument>true</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</argument>
      <argument>/home/usuario/domjudge-8.2.3/etc</argument>
    </service>
    <service id="App\Service\DOMJudgeService" class="App\Service\DOMJudgeService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Service\EventLogService" class="App\Service\EventLogService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\Service\ExternalContestSourceService" class="App\Service\ExternalContestSourceService" autowire="true" autoconfigure="true">
      <argument type="service" id=".sentry.traceable.http_client"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger.event-feed-importer"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
    </service>
    <service id="App\Service\ICPCCmsService" class="App\Service\ICPCCmsService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>8.2.3</argument>
    </service>
    <service id="App\Service\ImportExportService" class="App\Service\ImportExportService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Service\ImportProblemService" class="App\Service\ImportProblemService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Service\RejudgingService" class="App\Service\RejudgingService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\BalloonService"/>
    </service>
    <service id="App\Service\ScoreboardService" class="App\Service\ScoreboardService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Service\StatisticsService" class="App\Service\StatisticsService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\SubmissionService" class="App\Service\SubmissionService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
    </service>
    <service id="App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\AwardService"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
    </service>
    <service id="App\Utils\FreezeData" class="App\Utils\FreezeData" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Filter" class="App\Utils\Scoreboard\Filter" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\ProblemSummary" class="App\Utils\Scoreboard\ProblemSummary" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Scoreboard" class="App\Utils\Scoreboard\Scoreboard" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\ScoreboardMatrixItem" class="App\Utils\Scoreboard\ScoreboardMatrixItem" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\SingleTeamScoreboard" class="App\Utils\Scoreboard\SingleTeamScoreboard" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Summary" class="App\Utils\Scoreboard\Summary" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\TeamScore" class="App\Utils\Scoreboard\TeamScore" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Utils" class="App\Utils\Utils" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\Country" class="App\Validator\Constraints\Country" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="App\Validator\Constraints\Identifier" class="App\Validator\Constraints\Identifier" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="App\Validator\Constraints\TimeString" class="App\Validator\Constraints\TimeString" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="fos_rest.serializer.flatten_exception_handler" class="App\FosRestBundle\FlattenExceptionHandler" public="true" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <argument type="service" id="doctrine.debug_data_holder" on-invalid="null"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" class="Doctrine\Bundle\DoctrineBundle\Controller\ProfilerController" public="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSchemaAssetsFilter">
        <argument type="service" id="doctrine.dbal.default_schema_asset_filter_manager"/>
      </call>
      <call method="setMiddlewares">
        <argument type="collection">
          <argument type="service">
            <service class="Doctrine\DBAL\Logging\Middleware">
              <argument type="service" id="monolog.logger.doctrine"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
              <argument type="service" id="doctrine.debug_data_holder"/>
              <argument type="service" id="debug.stopwatch" on-invalid="null"/>
              <call method="setConnectionName">
                <argument>default</argument>
              </call>
            </service>
          </argument>
          <argument type="service" id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverMiddleware"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_regex_schema_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\RegexSchemaAssetFilter">
      <tag name="doctrine.dbal.schema_filter" connection="default"/>
      <argument>~^(?!sessions)~</argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.mJttM4i"/>
      <argument type="collection">
        <argument>App\Doctrine\HashPasswordSubscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_token_provider_schema_subscriber</argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection">
        <argument key="enum">string</argument>
      </argument>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware" class="Doctrine\DBAL\Logging\Middleware" abstract="true">
      <tag name="monolog.logger" channel="doctrine"/>
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.debug_data_holder" class="Doctrine\Bundle\DoctrineBundle\Middleware\BacktraceDebugDataHolder">
      <argument type="collection">
        <argument>default</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.debug_middleware" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware" abstract="true">
      <tag name="doctrine.middleware" connection="default"/>
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id=".1_ServiceLocator~Sgrfq25" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true"/>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.orm.command.entity_manager_provider" class="Doctrine\Bundle\DoctrineBundle\Orm\ManagerRegistryAwareEntityManagerProvider">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\CollectionRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\EntityRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\ORM\Tools\Console\Command\InfoCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\ORM\Tools\Console\Command\ClearCache\QueryRegionCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\ORM\Tools\Console\Command\RunDqlCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.orm.command.entity_manager_provider"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query.traceable"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result.traceable"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setSchemaIgnoreClasses">
        <argument type="collection"/>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setLazyGhostObjectEnabled">
        <argument>false</argument>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>truncate</argument>
        <argument>App\Doctrine\ORM\Query\AST\Functions\TruncateFunction</argument>
      </call>
      <call method="addCustomStringFunction">
        <argument>right</argument>
        <argument>App\Doctrine\ORM\Query\AST\Functions\RightFunction</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/home/usuario/domjudge-8.2.3/webapp/src/Entity</argument>
      </argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\SerializerBundle\Debug\TraceableEventDispatcher">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.event_dispatcher.service_locator"/>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.stopwatch_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.traceable_runs_listener</argument>
          <argument>saveRunInfo</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerializeTypedProxy</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerializeTypedProxy</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Common\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>Doctrine\Common\Persistence\Proxy</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.doctrine_proxy_subscriber</argument>
          <argument>onPreSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
      </call>
      <call method="addListener">
        <argument>serializer.pre_deserialize</argument>
        <argument type="collection">
          <argument>jms_serializer.traceable_runs_listener</argument>
          <argument>saveRunInfo</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\ContestProblemVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>App\Entity\ContestProblem</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\ContestVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>App\Entity\Contest</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\SetExternalIdVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\SubmissionVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>App\Entity\Submission</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\TeamAffiliationVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>App\Entity\TeamAffiliation</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>App\Serializer\TeamVisitor</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>App\Entity\Team</argument>
        <argument>json</argument>
        <argument>null</argument>
      </call>
      <call method="addListener">
        <argument>serializer.post_serialize</argument>
        <argument type="collection">
          <argument>jms_serializer.stopwatch_subscriber</argument>
          <argument>onPostSerialize</argument>
        </argument>
        <argument>null</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="jms_serializer.event_dispatcher.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="collection">
        <argument key="jms_serializer.stopwatch_subscriber" type="service_closure" id="jms_serializer.stopwatch_subscriber"/>
        <argument key="jms_serializer.traceable_runs_listener" type="service_closure" id="jms_serializer.traceable_runs_listener"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service_closure" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="App\Serializer\ContestProblemVisitor" type="service_closure" id="App\Serializer\ContestProblemVisitor"/>
        <argument key="App\Serializer\ContestVisitor" type="service_closure" id="App\Serializer\ContestVisitor"/>
        <argument key="App\Serializer\SetExternalIdVisitor" type="service_closure" id="App\Serializer\SetExternalIdVisitor"/>
        <argument key="App\Serializer\SubmissionVisitor" type="service_closure" id="App\Serializer\SubmissionVisitor"/>
        <argument key="App\Serializer\TeamAffiliationVisitor" type="service_closure" id="App\Serializer\TeamAffiliationVisitor"/>
        <argument key="App\Serializer\TeamVisitor" type="service_closure" id="App\Serializer\TeamVisitor"/>
      </argument>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="debug.stopwatch"/>
      <argument>jms_serializer.default</argument>
    </service>
    <service id="jms_serializer.handler_registry.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="collection">
        <argument key="fos_rest.serializer.flatten_exception_handler" type="service_closure" id="fos_rest.serializer.flatten_exception_handler"/>
        <argument key="jms_serializer.array_collection_handler" type="service_closure" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service_closure" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service_closure" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service_closure" id="jms_serializer.iterator_handler"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service_closure" id="fos_rest.serializer.form_error_handler"/>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser">
      <tag name="jms_serializer.instance_global"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.annotation_and_attributes_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service" id="jms_serializer.metadata.doctrine_type_driver.inner"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.type_parser"/>
    </service>
    <service id="jms_serializer.metadata.typed_properties_driver" class="JMS\Serializer\Metadata\Driver\TypedPropertiesDriver">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.doctrine_type_driver"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="collection">
        <argument key="metadata_driver" type="service_closure" id="jms_serializer.metadata.typed_properties_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.service_locator"/>
      <argument>metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache">
      <tag name="default">jms_serializer.instance</tag>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/jms_serializer_default</argument>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" abstract="true">
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy">
      <tag name="default">jms_serializer.instance</tag>
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy">
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="jms_serializer.doctrine_object_constructor.inner"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <tag name="default">jms_serializer.instance</tag>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.doctrine_object_constructor"/>
    </service>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer">
      <tag name="default">jms_serializer.instance</tag>
      <tag name="default">jms_serializer.serializer</tag>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.doctrine_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <tag name="jms_serializer.instance_global"/>
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <tag name="jms_serializer.instance_global"/>
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider">
      <tag name="jms.expression.function_provider"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.twig_extension.runtime_serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension">
      <tag name="twig.extension"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>jms_</argument>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper">
      <tag name="twig.runtime"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <tag name="default">jms_serializer.instance</tag>
      <call method="setOptions">
        <argument>1088</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>false</argument>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.cache.cache_clearer" class="JMS\SerializerBundle\Cache\CacheClearer">
      <tag name="kernel.cache_clearer"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.cache.file_cache"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory">
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory">
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.data_collector" class="JMS\SerializerBundle\Debug\DataCollector">
      <tag name="jms_serializer.profiler"/>
      <tag name="data_collector" id="jms_serializer" template="@JMSSerializer/Collector/panel.html.twig"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument>default</argument>
      <argument type="collection"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry"/>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator"/>
      <argument type="service" id="jms_serializer.traceable_runs_listener"/>
    </service>
    <service id="jms_serializer.traceable_runs_listener" class="JMS\SerializerBundle\Debug\RunsListener">
      <tag name="jms_serializer.event_listener" event="serializer.pre_serialize" method="saveRunInfo"/>
      <tag name="jms_serializer.event_listener" event="serializer.pre_deserialize" method="saveRunInfo"/>
      <tag name="jms_serializer.profiler"/>
      <tag name="default">jms_serializer.instance</tag>
    </service>
    <service id="jms_serializer.traceable_metadata_factory" class="JMS\SerializerBundle\Debug\TraceableMetadataFactory">
      <tag name="default">jms_serializer.instance</tag>
      <tag name="jms_serializer.profiler"/>
      <argument type="service" id="jms_serializer.traceable_metadata_factory.inner"/>
    </service>
    <service id="jms_serializer.traceable_handler_registry" class="JMS\SerializerBundle\Debug\TraceableHandlerRegistry">
      <tag name="default">jms_serializer.instance</tag>
      <tag name="jms_serializer.profiler"/>
      <argument type="service" id="jms_serializer.traceable_handler_registry.inner"/>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\ErrorHandler\Exception\FlattenException</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.flatten_exception_handler</argument>
          <argument>serializeToJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>serializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolationList</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeListToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolationList</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeListTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolation</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeViolationToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Validator\ConstraintViolation</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.constraint_violation_handler</argument>
          <argument>serializeViolationTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTime</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTime</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTime</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTime</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeImmutable</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeImmutable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeImmutable</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeImmutable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateInterval</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateInterval</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateInterval</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateInterval</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeInterface</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>DateTimeInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>serializeDateTimeInterface</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Iterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Iterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayIterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>ArrayIterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Generator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Generator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>serializeIterable</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\Form</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\Form</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormToJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormError</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormErrorToxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>1</argument>
        <argument>Symfony\Component\Form\FormError</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>fos_rest.serializer.form_error_handler</argument>
          <argument>serializeFormErrorTojson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\Common\Collections\ArrayCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ORM\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
        <argument>yml</argument>
        <argument type="collection">
          <argument>jms_serializer.array_collection_handler</argument>
          <argument>deserializeCollection</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTime</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTime</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeImmutable</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeImmutableFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeImmutable</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeImmutableFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateInterval</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateIntervalFromjson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateInterval</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateIntervalFromxml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeInterface</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromJson</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>DateTimeInterface</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.datetime_handler</argument>
          <argument>deserializeDateTimeFromXml</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Iterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Iterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayIterator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>ArrayIterator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeIterator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Generator</argument>
        <argument>json</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeGenerator</argument>
        </argument>
      </call>
      <call method="registerHandler">
        <argument>2</argument>
        <argument>Generator</argument>
        <argument>xml</argument>
        <argument type="collection">
          <argument>jms_serializer.iterator_handler</argument>
          <argument>deserializeGenerator</argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.metadata.traceable_file_locator" class="JMS\SerializerBundle\Debug\TraceableFileLocator">
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="jms_serializer.metadata.traceable_file_locator.inner"/>
    </service>
    <service id="jms_serializer.metadata.annotation_and_attributes_reader" class="JMS\Serializer\Metadata\Driver\AttributeDriver\AttributeReader">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="nelmio_api_doc.command.dump" class="Nelmio\ApiDocBundle\Command\DumpCommand" public="true">
      <tag name="console.command" command="nelmio:apidoc:dump"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="nelmio_api_doc.render_docs"/>
      <call method="setName">
        <argument>nelmio:apidoc:dump</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.controller.swagger_ui" class="Nelmio\ApiDocBundle\Controller\SwaggerUiController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.controller.swagger_json" class="Nelmio\ApiDocBundle\Controller\DocumentationController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.controller.swagger_yaml" class="Nelmio\ApiDocBundle\Controller\YamlDocumentationController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.render_docs" class="Nelmio\ApiDocBundle\Render\RenderOpenApi" public="true">
      <argument type="service" id="nelmio_api_doc.generator_locator"/>
      <argument type="service" id="nelmio_api_doc.render_docs.json"/>
      <argument type="service" id="nelmio_api_doc.render_docs.yaml"/>
      <argument type="service" id="nelmio_api_doc.render_docs.html" on-invalid="ignore"/>
    </service>
    <service id="nelmio_api_doc.render_docs.html" class="Nelmio\ApiDocBundle\Render\Html\HtmlOpenApiRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="nelmio_api_doc.render_docs.html.asset" class="Nelmio\ApiDocBundle\Render\Html\GetNelmioAsset">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.extension.assets"/>
    </service>
    <service id="nelmio_api_doc.render_docs.json" class="Nelmio\ApiDocBundle\Render\Json\JsonOpenApiRenderer"/>
    <service id="nelmio_api_doc.render_docs.yaml" class="Nelmio\ApiDocBundle\Render\Yaml\YamlOpenApiRenderer"/>
    <service id="nelmio_api_doc.controller_reflector" class="Nelmio\ApiDocBundle\Util\ControllerReflector">
      <argument type="service" id="service_container"/>
    </service>
    <service id="nelmio_api_doc.describers.config" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber">
      <tag name="nelmio_api_doc.describer" priority="1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="1000"/>
      <argument type="collection">
        <argument key="info" type="collection">
          <argument key="title">DOMjudge</argument>
          <argument key="description">DOMjudge API v4</argument>
          <argument key="version">8.2.3</argument>
        </argument>
        <argument key="security" type="collection">
          <argument type="collection">
            <argument key="basicAuth" type="collection"/>
          </argument>
        </argument>
        <argument key="components" type="collection">
          <argument key="securitySchemes" type="collection">
            <argument key="basicAuth" type="collection">
              <argument key="type">http</argument>
              <argument key="scheme">basic</argument>
            </argument>
          </argument>
          <argument key="parameters" type="collection">
            <argument key="cid" type="collection">
              <argument key="name">cid</argument>
              <argument key="in">path</argument>
              <argument key="description">The contest ID</argument>
              <argument key="required">true</argument>
              <argument key="schema" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="examples" type="collection">
                <argument key="int0" type="collection">
                  <argument key="value" type="string">2</argument>
                  <argument key="summary">The Demo contest (datasource=0)</argument>
                </argument>
                <argument key="int02" type="collection">
                  <argument key="value" type="string">1</argument>
                  <argument key="summary">The Demo practice contest (datasource=0)</argument>
                </argument>
                <argument key="string" type="collection">
                  <argument key="value">demo</argument>
                  <argument key="summary">The Demo contest (datasource=1)</argument>
                </argument>
              </argument>
            </argument>
            <argument key="balloonId" type="collection">
              <argument key="name">balloonId</argument>
              <argument key="in">path</argument>
              <argument key="description">The balloonId to mark as done.</argument>
              <argument key="required">true</argument>
              <argument key="schema" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="examples" type="collection">
                <argument key="balloon" type="collection">
                  <argument key="value">1</argument>
                  <argument key="summary">First balloon of the contest</argument>
                </argument>
              </argument>
            </argument>
            <argument key="id" type="collection">
              <argument key="name">id</argument>
              <argument key="in">path</argument>
              <argument key="description">The ID of the entity</argument>
              <argument key="required">true</argument>
              <argument key="schema" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="examples" type="collection">
                <argument key="generic" type="collection">
                  <argument key="value" type="string">1</argument>
                  <argument key="summary">Most Entities are integer indexed</argument>
                </argument>
                <argument key="participants" type="collection">
                  <argument key="value" type="string">3</argument>
                  <argument key="summary">Participants group</argument>
                </argument>
                <argument key="award" type="collection">
                  <argument key="value">winner</argument>
                  <argument key="summary">Default Award entity</argument>
                </argument>
                <argument key="executable" type="collection">
                  <argument key="value">py3</argument>
                  <argument key="summary">Compile executable for python3</argument>
                </argument>
              </argument>
            </argument>
            <argument key="idlist" type="collection">
              <argument key="name">ids[]</argument>
              <argument key="in">query</argument>
              <argument key="description">Filter the objects to get on this list of ID's</argument>
              <argument key="explode">true</argument>
              <argument key="schema" type="collection">
                <argument key="type">array</argument>
                <argument key="items" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">A single ID</argument>
                </argument>
              </argument>
            </argument>
            <argument key="strict" type="collection">
              <argument key="name">strict</argument>
              <argument key="in">query</argument>
              <argument key="description">Whether to only include CCS compliant properties in the response</argument>
              <argument key="schema" type="collection">
                <argument key="type">boolean</argument>
                <argument key="default">false</argument>
              </argument>
            </argument>
          </argument>
          <argument key="responses" type="collection">
            <argument key="NotFound" type="collection">
              <argument key="description">The specified resource was not found</argument>
              <argument key="content" type="collection">
                <argument key="application/json" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="type">object</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="Unauthenticated" type="collection">
              <argument key="description">Unauthenticated, authentication is missing</argument>
            </argument>
            <argument key="Unauthorized" type="collection">
              <argument key="description">Unauthorized, user needs an additional role</argument>
              <argument key="content" type="collection">
                <argument key="application/json" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="type">object</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="InvalidResponse" type="collection">
              <argument key="description">The specified resource identifier is malformed</argument>
              <argument key="content" type="collection">
                <argument key="application/json" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="oneOf" type="collection">
                      <argument type="collection">
                        <argument key="type">object</argument>
                      </argument>
                      <argument type="collection">
                        <argument key="type">string</argument>
                      </argument>
                    </argument>
                  </argument>
                </argument>
                <argument key="text/html" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="PostAccountResponse" type="collection">
              <argument key="description">Returns a (currently meaningless) status message.</argument>
              <argument key="content" type="collection">
                <argument key="application/json" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="type">object</argument>
                  </argument>
                </argument>
                <argument key="text/html" type="collection">
                  <argument key="schema" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
          </argument>
          <argument key="schemas" type="collection">
            <argument key="FileList" type="collection">
              <argument key="type">array</argument>
              <argument key="items" type="collection">
                <argument key="type">object</argument>
                <argument key="properties" type="collection">
                  <argument key="href" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="mime" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="ImageList" type="collection">
              <argument key="type">array</argument>
              <argument key="nullable">true</argument>
              <argument key="items" type="collection">
                <argument key="type">object</argument>
                <argument key="properties" type="collection">
                  <argument key="href" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="mime" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="hash" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="filename" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="width" type="collection">
                    <argument key="type">integer</argument>
                  </argument>
                  <argument key="height" type="collection">
                    <argument key="type">integer</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="Banner" type="collection">
              <argument key="properties" type="collection">
                <argument key="banner" type="collection">
                  <argument key="$ref">#/components/schemas/ImageList</argument>
                </argument>
              </argument>
            </argument>
            <argument key="Logo" type="collection">
              <argument key="properties" type="collection">
                <argument key="logo" type="collection">
                  <argument key="$ref">#/components/schemas/ImageList</argument>
                </argument>
              </argument>
            </argument>
            <argument key="Photo" type="collection">
              <argument key="properties" type="collection">
                <argument key="photo" type="collection">
                  <argument key="$ref">#/components/schemas/ImageList</argument>
                </argument>
              </argument>
            </argument>
            <argument key="ContestProblem" type="collection">
              <argument key="properties" type="collection">
                <argument key="id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="label" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="short_name" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="name" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="ordinal" type="collection">
                  <argument key="type">integer</argument>
                </argument>
                <argument key="rgb" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="color" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="time_limit" type="collection">
                  <argument key="type">number</argument>
                  <argument key="format">float</argument>
                </argument>
                <argument key="test_data_count" type="collection">
                  <argument key="type">integer</argument>
                </argument>
                <argument key="statement" type="collection">
                  <argument key="$ref">#/components/schemas/StatementList</argument>
                </argument>
              </argument>
            </argument>
            <argument key="Files" type="collection">
              <argument key="properties" type="collection">
                <argument key="files" type="collection">
                  <argument key="$ref">#/components/schemas/ArchiveList</argument>
                </argument>
              </argument>
            </argument>
            <argument key="ArchiveList" type="collection">
              <argument key="type">array</argument>
              <argument key="items" type="collection">
                <argument key="type">object</argument>
                <argument key="properties" type="collection">
                  <argument key="href" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="mime" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="StatementList" type="collection">
              <argument key="type">array</argument>
              <argument key="items" type="collection">
                <argument key="type">object</argument>
                <argument key="properties" type="collection">
                  <argument key="href" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="mime" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="filename" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="SourceCodeList" type="collection">
              <argument key="type">array</argument>
              <argument key="items" type="collection">
                <argument key="type">object</argument>
                <argument key="properties" type="collection">
                  <argument key="id" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="submission_id" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                  <argument key="filename" type="collection">
                    <argument key="type">string</argument>
                    <argument key="description">Original file name</argument>
                  </argument>
                  <argument key="source" type="collection">
                    <argument key="type">string</argument>
                    <argument key="description">Base64-encoded source code</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="JudgementType" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="name" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="penalty" type="collection">
                  <argument key="type">boolean</argument>
                </argument>
                <argument key="solved" type="collection">
                  <argument key="type">boolean</argument>
                </argument>
              </argument>
            </argument>
            <argument key="JudgementExtraFields" type="collection">
              <argument key="properties" type="collection">
                <argument key="judgement_type_id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="judgehost" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="max_run_time" type="collection">
                  <argument key="type">number</argument>
                  <argument key="format">float</argument>
                  <argument key="nullable">true</argument>
                </argument>
              </argument>
            </argument>
            <argument key="RunExtraFields" type="collection">
              <argument key="properties" type="collection">
                <argument key="judgement_type_id" type="collection">
                  <argument key="type">string</argument>
                </argument>
              </argument>
            </argument>
            <argument key="Scoreboard" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="event_id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="time" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="contest_time" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="state" type="collection">
                  <argument key="$ref">#/components/schemas/ContestState</argument>
                </argument>
                <argument key="rows" type="collection">
                  <argument key="type">array</argument>
                  <argument key="items" type="collection">
                    <argument key="type">object</argument>
                    <argument key="properties" type="collection">
                      <argument key="rank" type="collection">
                        <argument key="type">integer</argument>
                      </argument>
                      <argument key="team_id" type="collection">
                        <argument key="type">string</argument>
                      </argument>
                      <argument key="score" type="collection">
                        <argument key="type">object</argument>
                        <argument key="properties" type="collection">
                          <argument key="num_solved" type="collection">
                            <argument key="type">integer</argument>
                          </argument>
                          <argument key="total_time" type="collection">
                            <argument key="type">integer</argument>
                          </argument>
                        </argument>
                      </argument>
                      <argument key="problems" type="collection">
                        <argument key="type">array</argument>
                        <argument key="items" type="collection">
                          <argument key="type">object</argument>
                          <argument key="properties" type="collection">
                            <argument key="label" type="collection">
                              <argument key="type">string</argument>
                            </argument>
                            <argument key="problem_id" type="collection">
                              <argument key="type">string</argument>
                            </argument>
                            <argument key="num_judged" type="collection">
                              <argument key="type">integer</argument>
                            </argument>
                            <argument key="num_pending" type="collection">
                              <argument key="type">integer</argument>
                            </argument>
                            <argument key="solved" type="collection">
                              <argument key="type">boolean</argument>
                            </argument>
                            <argument key="time" type="collection">
                              <argument key="type">integer</argument>
                            </argument>
                            <argument key="first_to_solve" type="collection">
                              <argument key="type">boolean</argument>
                            </argument>
                          </argument>
                        </argument>
                      </argument>
                    </argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="ContestState" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="started" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
                <argument key="ended" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
                <argument key="frozen" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
                <argument key="thawed" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
                <argument key="finalized" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
                <argument key="end_of_updates" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                  <argument key="format">date-time</argument>
                </argument>
              </argument>
            </argument>
            <argument key="Award" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="citation" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="team_ids" type="collection">
                  <argument key="type">array</argument>
                  <argument key="items" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="AddUser" type="collection">
              <argument key="required" type="collection">
                <argument>username</argument>
                <argument>name</argument>
                <argument>password</argument>
                <argument>roles</argument>
              </argument>
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="username" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="name" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="email" type="collection">
                  <argument key="type">string</argument>
                  <argument key="format">email</argument>
                </argument>
                <argument key="ip" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="password" type="collection">
                  <argument key="type">string</argument>
                  <argument key="format">password</argument>
                </argument>
                <argument key="enabled" type="collection">
                  <argument key="type">boolean</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="team_id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="roles" type="collection">
                  <argument key="type">array</argument>
                  <argument key="items" type="collection">
                    <argument key="type">string</argument>
                  </argument>
                </argument>
              </argument>
            </argument>
            <argument key="Balloon" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="balloonid" type="collection">
                  <argument key="type">integer</argument>
                </argument>
                <argument key="time" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="problem" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="contestproblem" type="collection">
                  <argument key="$ref">#/components/schemas/ContestProblem</argument>
                </argument>
                <argument key="team" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="teamid" type="collection">
                  <argument key="type">integer</argument>
                </argument>
                <argument key="location" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="affiliation" type="collection">
                  <argument key="type">string</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="affiliationid" type="collection">
                  <argument key="type">integer</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="category" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="total" type="collection">
                  <argument key="type">array</argument>
                  <argument key="items" type="collection">
                    <argument key="$ref">#/components/schemas/ContestProblem</argument>
                  </argument>
                </argument>
                <argument key="awards" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="done" type="collection">
                  <argument key="type">boolean</argument>
                </argument>
              </argument>
            </argument>
            <argument key="ClarificationPost" type="collection">
              <argument key="type">object</argument>
              <argument key="required" type="collection">
                <argument>text</argument>
              </argument>
              <argument key="properties" type="collection">
                <argument key="text" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The body of the clarification to send</argument>
                </argument>
                <argument key="problem_id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The problem the clarification is for</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="reply_to_id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The ID of the clarification this clarification is a reply to</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="from_team_id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The team the clarification came from. Only used when adding a clarification as admin</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="to_team_id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The team the clarification must be sent to. Only used when adding a clarification as admin</argument>
                  <argument key="nullable">true</argument>
                </argument>
                <argument key="time" type="collection">
                  <argument key="type">string</argument>
                  <argument key="format">date-time</argument>
                  <argument key="description">The time to use for the clarification. Only used when adding a clarification as admin</argument>
                </argument>
                <argument key="id" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The ID to use for the clarification. Only used when adding a clarification as admin and only allowed with PUT</argument>
                </argument>
              </argument>
            </argument>
            <argument key="ContestProblemPut" type="collection">
              <argument key="type">object</argument>
              <argument key="required" type="collection">
                <argument>label</argument>
              </argument>
              <argument key="properties" type="collection">
                <argument key="label" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">The label of the problem to add to the contest</argument>
                </argument>
                <argument key="color" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">Human readable color of the problem to add. Will be overwritten by `rgb` if supplied</argument>
                </argument>
                <argument key="rgb" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">Hexadecimal RGB value of the color of the problem to add. Will be used if both `color` and `rgb` are supplied</argument>
                </argument>
                <argument key="points" type="collection">
                  <argument key="type">integer</argument>
                  <argument key="description">The number of points for the problem to add. Defaults to 1</argument>
                </argument>
                <argument key="lazy_eval_results" type="collection">
                  <argument key="type">boolean</argument>
                  <argument key="description">Whether to use lazy evaluation for this problem. Defaults to the global setting</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="nelmio_api_doc.describers.default" class="Nelmio\ApiDocBundle\Describer\DefaultDescriber">
      <tag name="nelmio_api_doc.describer" priority="-1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.route_describers.route_metadata" class="Nelmio\ApiDocBundle\RouteDescriber\RouteMetadataDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-300"/>
    </service>
    <service id="nelmio_api_doc.model_describers.self_describing" class="Nelmio\ApiDocBundle\ModelDescriber\SelfDescribingModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="1000"/>
    </service>
    <service id="nelmio_api_doc.model_describers.object" class="Nelmio\ApiDocBundle\ModelDescriber\ObjectModelDescriber">
      <tag name="nelmio_api_doc.model_describer"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="nelmio_api_doc.model_describers.enum" class="Nelmio\ApiDocBundle\ModelDescriber\EnumModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="100"/>
    </service>
    <service id="nelmio_api_doc.model_describers.object_fallback" class="Nelmio\ApiDocBundle\ModelDescriber\FallbackObjectModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.array" class="Nelmio\ApiDocBundle\PropertyDescriber\ArrayPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.boolean" class="Nelmio\ApiDocBundle\PropertyDescriber\BooleanPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.float" class="Nelmio\ApiDocBundle\PropertyDescriber\FloatPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.integer" class="Nelmio\ApiDocBundle\PropertyDescriber\IntegerPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.string" class="Nelmio\ApiDocBundle\PropertyDescriber\StringPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.date_time" class="Nelmio\ApiDocBundle\PropertyDescriber\DateTimePropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.object" class="Nelmio\ApiDocBundle\PropertyDescriber\ObjectPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.compound" class="Nelmio\ApiDocBundle\PropertyDescriber\CompoundPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer" priority="-1001"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.form.documentation_extension" class="Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.generator.default" class="Nelmio\ApiDocBundle\ApiDocGenerator" public="true">
      <tag name="monolog.logger" channel="nelmio_api_doc"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.describer.default"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.model_describer"/>
      <call method="setAlternativeNames">
        <argument type="collection"/>
      </call>
      <call method="setMediaTypes">
        <argument type="collection">
          <argument>json</argument>
        </argument>
      </call>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.nelmio_api_doc"/>
      </call>
    </service>
    <service id="nelmio_api_doc.describers.route.default" class="Nelmio\ApiDocBundle\Describer\RouteDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="-400"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.route_describer"/>
    </service>
    <service id="nelmio_api_doc.describers.openapi_php.default" class="Nelmio\ApiDocBundle\Describer\OpenApiPhpDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="-200"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="nelmio_api_doc.describers.config.default" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="990"/>
      <argument type="collection"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.routes.default" class="Symfony\Component\Routing\RouteCollection">
      <argument type="service">
        <service class="Symfony\Component\Routing\RouteCollection">
          <factory service="router.default" method="getRouteCollection"/>
        </service>
      </argument>
      <factory method="filter">
        <service class="Nelmio\ApiDocBundle\Routing\FilteredRouteCollectionBuilder">
          <argument type="service" id="annotations.cached_reader"/>
          <argument type="service" id="nelmio_api_doc.controller_reflector"/>
          <argument>default</argument>
          <argument type="collection">
            <argument key="path_patterns" type="collection">
              <argument>^/api/v4</argument>
            </argument>
            <argument key="host_patterns" type="collection"/>
            <argument key="name_patterns" type="collection"/>
            <argument key="with_annotation">false</argument>
            <argument key="disable_default_routes">false</argument>
          </argument>
        </service>
      </factory>
    </service>
    <service id="nelmio_api_doc.generator_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="default" type="service_closure" id="nelmio_api_doc.generator.default"/>
      </argument>
    </service>
    <service id="nelmio_api_doc.route_describers.php_doc" class="Nelmio\ApiDocBundle\RouteDescriber\PhpDocDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-275"/>
    </service>
    <service id="nelmio_api_doc.route_describers.fos_rest" class="Nelmio\ApiDocBundle\RouteDescriber\FosRestDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-250"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
    </service>
    <service id="nelmio_api_doc.model_describers.jms" class="Nelmio\ApiDocBundle\ModelDescriber\JMSModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="50"/>
      <argument type="service" id="jms_serializer.traceable_metadata_factory"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.aNklfos.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.event_feed_importer" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/log/event-feed-importer.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="fos_rest.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
      <argument type="service">
        <service class="void">
          <factory class="Symfony\Component\HttpFoundation\Request" method="enableHttpMethodParameterOverride"/>
        </service>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
    </service>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.event_feed_importer" type="service" id="monolog.handler.event_feed_importer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id=".sentry.traceable.http_client" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key=".debug.http_client" type="service" id=".debug.http_client" on-invalid="ignore_uninitialized"/>
        <argument key=".sentry.traceable.http_client" type="service" id=".sentry.traceable.http_client" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.event_feed_importer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="twig.form.engine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="fos_rest.view_handler.default" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".debug.http_client" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".sentry.traceable.http_client" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.lLv4pWF"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>dev</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.8milwyw"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Type\AbstractExternalIdEntityType</argument>
        <argument>App\Form\Type\BootstrapFileType</argument>
        <argument>App\Form\Type\ContestExportType</argument>
        <argument>App\Form\Type\ContestImportType</argument>
        <argument>App\Form\Type\ContestProblemType</argument>
        <argument>App\Form\Type\ContestType</argument>
        <argument>App\Form\Type\ExecutableType</argument>
        <argument>App\Form\Type\ExecutableUploadType</argument>
        <argument>App\Form\Type\ExternalContestSourceType</argument>
        <argument>App\Form\Type\ExternalSourceWarningsFilterType</argument>
        <argument>App\Form\Type\FinalizeContestType</argument>
        <argument>App\Form\Type\GeneratePasswordsType</argument>
        <argument>App\Form\Type\ICPCCmsType</argument>
        <argument>App\Form\Type\JsonImportType</argument>
        <argument>App\Form\Type\JudgehostType</argument>
        <argument>App\Form\Type\JudgehostsType</argument>
        <argument>App\Form\Type\LanguageType</argument>
        <argument>App\Form\Type\PrintType</argument>
        <argument>App\Form\Type\ProblemAttachmentType</argument>
        <argument>App\Form\Type\ProblemType</argument>
        <argument>App\Form\Type\ProblemUploadType</argument>
        <argument>App\Form\Type\ProblemsImportType</argument>
        <argument>App\Form\Type\RejudgingType</argument>
        <argument>App\Form\Type\RemovedIntervalType</argument>
        <argument>App\Form\Type\SubmissionsFilterType</argument>
        <argument>App\Form\Type\SubmitProblemType</argument>
        <argument>App\Form\Type\TeamAffiliationType</argument>
        <argument>App\Form\Type\TeamCategoryType</argument>
        <argument>App\Form\Type\TeamClarificationType</argument>
        <argument>App\Form\Type\TeamType</argument>
        <argument>App\Form\Type\TsvImportType</argument>
        <argument>App\Form\Type\UserRegistrationType</argument>
        <argument>App\Form\Type\UserType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Extension\IconButtonExtension</argument>
        <argument>Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>FOS\RestBundle\Form\Extension\DisableCSRFExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="cache.app.traceable"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Doctrine provider service</argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
      <deprecated package="symfony/framework-bundle" version="5.4">The "%service_id%" service inherits from "cache.adapter.doctrine" which is deprecated.</deprecated>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app.traceable" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language.traceable" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language.traceable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language.traceable" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id=".sentry.traceable.http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets.remote_json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest url</argument>
      <argument type="service" id=".sentry.traceable.http_client"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "assets.json_manifest_version_strategy" instead.</deprecated>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy">
      <argument>v=8.2.3</argument>
      <argument>%%s?%%s</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets._version__default"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="psr18.http_client" class="Symfony\Component\HttpClient\Psr18Client">
      <argument type="service" id=".sentry.traceable.http_client"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="Http\Client\HttpClient" class="Symfony\Component\HttpClient\HttplugClient">
      <argument type="service" id=".sentry.traceable.http_client"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.context_listener.0"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.zone_matcher_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>248</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ConsoleListener"/>
          <argument>handleConsoleCommandEvent</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ConsoleListener"/>
          <argument>handleConsoleTerminateEvent</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ConsoleListener"/>
          <argument>handleConsoleErrorEvent</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ErrorListener"/>
          <argument>handleExceptionEvent</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\RequestListener"/>
          <argument>handleKernelRequestEvent</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\RequestListener"/>
          <argument>handleKernelControllerEvent</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\SubRequestListener"/>
          <argument>handleKernelRequestEvent</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\SubRequestListener"/>
          <argument>handleKernelFinishRequestEvent</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingRequestListener"/>
          <argument>handleKernelRequestEvent</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingRequestListener"/>
          <argument>handleKernelResponseEvent</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingRequestListener"/>
          <argument>handleKernelTerminateEvent</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingSubRequestListener"/>
          <argument>handleKernelRequestEvent</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingSubRequestListener"/>
          <argument>handleKernelFinishRequestEvent</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingSubRequestListener"/>
          <argument>handleKernelResponseEvent</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingConsoleListener"/>
          <argument>handleConsoleCommandEvent</argument>
        </argument>
        <argument>118</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\TracingConsoleListener"/>
          <argument>handleConsoleTerminateEvent</argument>
        </argument>
        <argument>-54</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\AddContentSecurityPolicyListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\AddCurrentContestListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\ApiHeadersListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\BodyTooBigListener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\ProfilerDisableListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\EventListener\UpdateUserRolesListener"/>
          <argument>onRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Security\UserStateUpdater"/>
          <argument>updateUserState</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.view_response_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.XWmhzGa"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.UIzyiU0.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kr.dDlB"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.oCg4uHe.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry" on-invalid="null"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader">
      <tag name="annotations.cached_reader"/>
      <tag name="container.do_not_inline"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.filesystem_cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <tag name="container.hot_path"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations.traceable"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="annotations.cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/home/usuario/domjudge-8.2.3/webapp/.env.dev.local</argument>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.phpstan_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.phpstan_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpStanExtractor">
      <tag name="property_info.type_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".session.do-not-use" class="Symfony\Component\HttpFoundation\Session\Session">
      <factory service="session.factory" method="createSession"/>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.native"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.abstract_handler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.abstract_handler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.storage.factory.service" class="Symfony\Bundle\FrameworkBundle\Session\ServiceSessionFactory">
      <argument type="service" id="session.storage"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.native", "session.storage.factory.php_bridge" or "session.storage.factory.mock_file" instead.</deprecated>
    </service>
    <service id=".session.deprecated" class="Symfony\Component\HttpFoundation\Session\SessionInterface">
      <factory method="getSession">
        <service class="Symfony\Bundle\FrameworkBundle\Session\DeprecatedSessionFactory">
          <argument type="service" id="request_stack"/>
        </service>
      </factory>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag">
      <factory service=".session.do-not-use" method="getFlashBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getFlashBag()" instead.</deprecated>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag">
      <argument>attributes</argument>
      <factory service=".session.do-not-use" method="getBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getAttributeBag()" instead.</deprecated>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/sessions</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument>%env(DATABASE_URL)%</argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.GVyCdgr"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.L7dBXaL"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType" type="iterator">
          <argument type="service" id="App\Form\Extension\IconButtonExtension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="nelmio_api_doc.form.documentation_extension"/>
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="fos_rest.form.extension.csrf_disable"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="form.type_guesser.validator"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument>null</argument>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument>null</argument>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument>null</argument>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument>null</argument>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
      <argument>true</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument>null</argument>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator.traceable"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.kmI3eav"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language.traceable" on-invalid="null"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id=".sentry.traceable.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.4"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="jms_serializer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage">
      <argument>file:/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.request.session_collector" class="Closure">
      <argument type="collection">
        <argument type="service" id="data_collector.request"/>
        <argument>collectSessionUsage</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result.traceable</argument>
        <argument type="service" id="cache.doctrine.orm.default.result.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query.traceable</argument>
        <argument type="service" id="cache.doctrine.orm.default.query.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.app.traceable</argument>
        <argument type="service" id="cache.app.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.system.traceable</argument>
        <argument type="service" id="cache.system.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator.traceable</argument>
        <argument type="service" id="cache.validator.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer.traceable</argument>
        <argument type="service" id="cache.serializer.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations.traceable</argument>
        <argument type="service" id="cache.annotations.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info.traceable</argument>
        <argument type="service" id="cache.property_info.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator_expression_language.traceable</argument>
        <argument type="service" id="cache.validator_expression_language.traceable"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language.traceable</argument>
        <argument type="service" id="cache.security_expression_language.traceable"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="container.private" package="symfony/twig-bundle" version="5.2"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.runtime_serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.render_docs.html.asset"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Sentry\SentryBundle\Tracing\Twig\TwigTracingExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Sentry\SentryBundle\Twig\SentryExtension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>DOMJUDGE_VERSION</argument>
        <argument>8.2.3</argument>
      </call>
      <call method="addGlobal">
        <argument>DJ_CHARACTER_SET</argument>
        <argument>utf-8</argument>
      </call>
      <call method="addGlobal">
        <argument>teamname_max_length</argument>
        <argument>30</argument>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/home/usuario/domjudge-8.2.3/lib/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.v.Wwsjy.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/jms/serializer-bundle/Resources/views</argument>
        <argument>JMSSerializer</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/jms/serializer-bundle/Resources/views</argument>
        <argument>!JMSSerializer</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/webapp/templates/bundles/NelmioApiDocBundle</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>!NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/webapp/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/webapp/templates/bundles/TwigBundle</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/webapp/templates</argument>
      </call>
      <call method="addPath">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument>null</argument>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.J_Re9z7"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension"/>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument>null</argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <tag name="kernel.reset" method="reset"/>
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security">
      <argument type="service" id=".service_locator.nLgZj7R"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
      <argument type="service" id="security.csrf.token_storage" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>7</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory.generic"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.user_password_hasher" instead.</deprecated>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language.traceable" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.LlG0ewc"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
        <argument key="security.firewall.map.context.metrics" type="service" id=".security.request_matcher._elIjWS"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="class">Symfony\Component\PasswordHasher\Hasher\NativePasswordHasher</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>7</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint">
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is contained in the authenticators.</deprecated>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint">
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is integrated directly in "security.channel_listener".</deprecated>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap">
      <call method="add">
        <argument type="service" id=".security.request_matcher.xujZZ.E"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.O7Tsk.w"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.MBt.Hn5"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.cRNYaJ1"/>
        <argument type="collection">
          <argument>PUBLIC_ACCESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="abstract">Catch exception flag set in RememberMeFactory</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" abstract="true">
      <argument type="abstract">User Checker</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider"/>
    <service id="security.authentication.rememberme.services.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authenticator.manager" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">authenticators</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="abstract">provider key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="abstract">required badges</argument>
    </service>
    <service id="security.authenticator.managers_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection">
        <argument key="api" type="service_closure" id="security.authenticator.manager.api"/>
        <argument key="metrics" type="service_closure" id="security.authenticator.manager.metrics"/>
        <argument key="main" type="service_closure" id="security.authenticator.manager.main"/>
      </argument>
    </service>
    <service id="security.user_authenticator" class="Symfony\Bundle\SecurityBundle\Security\UserAuthenticator">
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.authenticator.managers_locator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Http\Authentication\NoopAuthenticationManager"/>
    <service id="security.firewall.authenticator" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener" abstract="true">
      <argument type="abstract">authenticator manager</argument>
    </service>
    <service id="security.listener.check_authenticator_credentials" class="Symfony\Component\Security\Http\EventListener\CheckCredentialsListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="1024" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
    </service>
    <service id="security.listener.user_provider.abstract" class="Symfony\Component\Security\Http\EventListener\UserProviderListener" abstract="true">
      <argument type="abstract">user provider</argument>
    </service>
    <service id="security.listener.password_migrating" class="Symfony\Component\Security\Http\EventListener\PasswordMigratingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.listener.user_checker" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener" abstract="true">
      <argument type="abstract">user checker</argument>
    </service>
    <service id="security.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener" abstract="true">
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.listener.login_throttling" class="Symfony\Component\Security\Http\EventListener\LoginThrottlingListener" abstract="true">
      <argument type="service" id="request_stack"/>
      <argument type="abstract">request rate limiter</argument>
    </service>
    <service id="security.authenticator.http_basic" class="Symfony\Component\Security\Http\Authenticator\HttpBasicAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">realm name</argument>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.form_login" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
    </service>
    <service id="security.authenticator.json_login" class="Symfony\Component\Security\Http\Authenticator\JsonLoginAuthenticator" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">user provider</argument>
      <argument type="abstract">authentication success handler</argument>
      <argument type="abstract">authentication failure handler</argument>
      <argument type="abstract">options</argument>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator" on-invalid="ignore"/>
      </call>
    </service>
    <service id="security.authenticator.x509" class="Symfony\Component\Security\Http\Authenticator\X509Authenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="abstract">credentials key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authenticator.remote_user" class="Symfony\Component\Security\Http\Authenticator\RemoteUserAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="abstract">user provider</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">firewall name</argument>
      <argument type="abstract">user key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>api</argument>
        <argument>metrics</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" abstract="true">
      <argument type="abstract">Authenticators</argument>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Authenticators</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.LlG0ewc"/>
      <argument type="service" id=".service_locator.8milwyw"/>
      <argument type="collection">
        <argument key="api" type="collection">
          <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
          <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
        </argument>
        <argument key="metrics" type="collection">
          <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
          <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
        </argument>
        <argument key="main" type="collection">
          <argument type="service" id="App\Security\DOMJudgeXHeadersAuthenticator"/>
          <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
          <argument type="service" id="security.authenticator.form_login.main"/>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.domjudge_db_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>api</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.domjudge_db_provider</argument>
      <argument>null</argument>
      <argument>App\Security\DOMJudgeIPAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>App\Security\DOMJudgeIPAuthenticator</argument>
        <argument>App\Security\DOMJudgeBasicAuthenticator</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id="security.listener.api.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.api" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
    </service>
    <service id="security.event_dispatcher.api" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.api">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.api.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.api"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Security\UserStateUpdater"/>
          <argument>updateUserState</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.authenticator.manager.api" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.api"/>
      <argument>api</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.api" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.api.inner"/>
    </service>
    <service id="security.listener.user_checker.api" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.api"/>
      <argument type="service" id="App\Security\UserChecker"/>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="debug.security.firewall.authenticator.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.metrics" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>metrics</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher._elIjWS</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.domjudge_db_provider</argument>
      <argument>null</argument>
      <argument>App\Security\DOMJudgeIPAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>App\Security\DOMJudgeIPAuthenticator</argument>
        <argument>App\Security\DOMJudgeBasicAuthenticator</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher._elIjWS" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/prometheus/metrics</argument>
    </service>
    <service id="security.listener.metrics.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.metrics" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
    </service>
    <service id="security.event_dispatcher.metrics" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.metrics">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.metrics.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.metrics"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.metrics"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Security\UserStateUpdater"/>
          <argument>updateUserState</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.authenticator.manager.metrics" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.metrics"/>
      <argument>metrics</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.metrics" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.metrics.inner"/>
    </service>
    <service id="security.listener.user_checker.metrics" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.metrics"/>
      <argument type="service" id="App\Security\UserChecker"/>
    </service>
    <service id="security.exception_listener.metrics" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>metrics</argument>
      <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.metrics" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="debug.security.firewall.authenticator.metrics"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.metrics"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.metrics"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.domjudge_db_provider</argument>
      <argument>main</argument>
      <argument>App\Security\DOMJudgeXHeadersAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>App\Security\DOMJudgeXHeadersAuthenticator</argument>
        <argument>App\Security\DOMJudgeIPAuthenticator</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/</argument>
    </service>
    <service id="security.listener.main.user_provider" class="Symfony\Component\Security\Http\EventListener\UserProviderListener">
      <tag name="kernel.event_listener" dispatcher="security.event_dispatcher.main" event="Symfony\Component\Security\Http\Event\CheckPassportEvent" priority="2048" method="checkPassport"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.main.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.session.main"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>preCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_checker.main"/>
          <argument>postCheckCredentials</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.user_provider"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Security\UserStateUpdater"/>
          <argument>updateUserState</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.check_authenticator_credentials"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.password_migrating"/>
          <argument>onLoginSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.listener.csrf_protection"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionStrategyListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.main" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/public</argument>
    </service>
    <service id="security.logout.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
    </service>
    <service id="security.authenticator.form_login.main" class="Symfony\Component\Security\Http\Authenticator\FormLoginAuthenticator">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="login_path">login</argument>
        <argument key="check_path">login</argument>
        <argument key="enable_csrf">true</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
        <argument key="form_only">false</argument>
      </argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">login</argument>
          <argument key="use_referer">true</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setFirewallName">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authenticator.manager.main" class="Symfony\Component\Security\Http\Authentication\AuthenticatorManager">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection">
        <argument type="service" id="App\Security\DOMJudgeXHeadersAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
        <argument type="service" id="security.authenticator.form_login.main"/>
      </argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="debug.security.firewall.authenticator.main" class="Symfony\Component\Security\Http\Authenticator\Debug\TraceableAuthenticatorManagerListener">
      <argument type="service" id="debug.security.firewall.authenticator.main.inner"/>
    </service>
    <service id="security.listener.user_checker.main" class="Symfony\Component\Security\Http\EventListener\UserCheckerListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="App\Security\UserChecker"/>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\DOMJudgeXHeadersAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="debug.security.firewall.authenticator.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.LlG0ewc" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.metrics" type="service_closure" id="security.firewall.map.context.metrics"/>
      </argument>
    </service>
    <service id=".security.request_matcher.xujZZ.E" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/$</argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.O7Tsk.w" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/register</argument>
    </service>
    <service id=".security.request_matcher.MBt.Hn5" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/public</argument>
    </service>
    <service id=".security.request_matcher.cRNYaJ1" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand">
      <tag name="console.command" command="security:encode-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
      <call method="setDescription">
        <argument>Encode a password</argument>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.command.user_password_hash" instead.</deprecated>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">true</argument>
      </argument>
      <factory class="FOS\RestBundle\View\ViewHandler" method="create"/>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler">
      <argument></argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.form.extension.csrf_disable" class="FOS\RestBundle\Form\Extension\DisableCSRFExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.token_storage"/>
      <argument>ROLE_API</argument>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.exception.messages_map" class="FOS\RestBundle\Util\ExceptionValueMap">
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Exception\BadRequestHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\NotAcceptableHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\NotFoundHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException">true</argument>
      </argument>
    </service>
    <service id="fos_rest.serializer.flatten_exception_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="fos_rest.error_renderer.serializer" class="FOS\RestBundle\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="FOS\RestBundle\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html" on-invalid="null"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="FOS\RestBundle\ErrorRenderer\SerializerErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id=".service_locator.WHiOA.m"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id=".service_locator.WHiOA.m" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service_closure" id="fos_rest.decoder.json"/>
      </argument>
    </service>
    <service id="fos_rest.zone_matcher_listener" class="FOS\RestBundle\EventListener\ZoneMatcherListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="248"/>
      <tag name="container.hot_path"/>
      <call method="addRequestMatcher">
        <argument type="service" id="fos_rest.zone_request_matcher.b417c83ef2bcf459b4b2bb1e5a42d5c86f974ffd6bfe73357a9f04d46025529306a33be3"/>
      </call>
    </service>
    <service id="fos_rest.zone_request_matcher.b417c83ef2bcf459b4b2bb1e5a42d5c86f974ffd6bfe73357a9f04d46025529306a33be3" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api/*</argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator"/>
      </argument>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service">
        <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
          <argument>null</argument>
          <argument>UTF-8</argument>
          <argument>1</argument>
          <call method="setDisplayOptions">
            <argument type="collection">
              <argument key="maxStringLength">4096</argument>
              <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument type="service" id="data_collector.dump" on-invalid="ignore"/>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
      <factory class="Doctrine\Migrations\DependencyFactory" method="fromEntityManager"/>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/home/usuario/domjudge-8.2.3/webapp/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>false</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="default" type="service" id="doctrine.fixtures.purger.orm_purger_factory"/>
      </argument>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\ExecutableFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\LanguageFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\RoleFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\TeamCategoryFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\TeamFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\DefaultData\UserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExampleData\JudgehostFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExampleData\TeamAffiliationFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExampleData\TeamCategoryFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExampleData\TeamFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExampleData\UserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\AddMoreDemoUsersFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\AddProblemAttachmentFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\BalloonCorrectSubmissionFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\BalloonUserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\ClarificationFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\ContestTimeFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoNonPublicContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPostDeactivateContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreActivationContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreDeactivateContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreEndContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreFreezeContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreStartContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DemoPreUnfreezeContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\DummyProblemFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\EnableJavaEntrypointFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\EnableKotlinFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\EnableSelfregisterFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\ExtraJudgehostFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\LockedContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\RejudgingStatesFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\RemoveTeamFromAdminUserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\RemoveTeamFromDemoUserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleAffiliationsFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleEventsFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleSubmissionsFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleSubmissionsInBucketsFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\Test\SelfRegisteredUserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.fixtures.purger.orm_purger_factory" class="Doctrine\Bundle\FixturesBundle\Purger\ORMPurgerFactory">
      <tag name="doctrine.fixtures.purger_factory" alias="default"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument>null</argument>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection">
      <argument></argument>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
        <argument key="request" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider">
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider"/>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer">
      <tag name="monolog.logger" channel="debug"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor">
            <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
          </service>
        </argument>
        <argument key="html" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor">
            <argument type="service" id="var_dumper.html_dumper"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Start a dump server that collects and displays dumps in a single place</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
      <call method="setDescription">
        <argument>Start a log server that displays logs in real time</argument>
      </call>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper">
      <argument>App\Entity</argument>
      <argument type="service" id="maker.php_compat_util"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument type="collection">
            <argument>App\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
      <argument type="service" id="maker.php_compat_util"/>
      <argument type="service" id="maker.template_component_generator"/>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.security_controller_builder" class="Symfony\Bundle\MakerBundle\Security\SecurityControllerBuilder">
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.php_compat_util" class="Symfony\Bundle\MakerBundle\Util\PhpCompatUtil">
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.template_component_generator" class="Symfony\Bundle\MakerBundle\Util\TemplateComponentGenerator">
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.security_controller_builder"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController">
      <tag name="maker.command"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>null</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_test" class="Symfony\Bundle\MakerBundle\Maker\MakeTest">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest">
      <tag name="maker.command"/>
      <deprecated package="symfony/maker-bundle" version="1.29">The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.entity_class_generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration">
      <tag name="maker.command"/>
      <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
    </service>
    <service id="maker.maker.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeStimulusController">
      <tag name="maker.command"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id="twig.extension.markdown" class="Twig\Extra\Markdown\MarkdownExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.markdown" class="Twig\Extra\Markdown\MarkdownRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.markdown.default"/>
    </service>
    <service id="twig.markdown.default" class="Twig\Extra\Markdown\LeagueMarkdown">
      <argument type="service" id="twig.markdown.league_common_mark_converter"/>
    </service>
    <service id="twig.markdown.league_common_mark_converter_factory" class="Twig\Extra\TwigExtraBundle\LeagueCommonMarkConverterFactory">
      <argument type="tagged_iterator" tag="twig.markdown.league_extension"/>
    </service>
    <service id="twig.markdown.league_common_mark_converter" class="League\CommonMark\CommonMarkConverter">
      <factory service="twig.markdown.league_common_mark_converter_factory" method="__invoke"/>
    </service>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Sentry\Transport\TransportFactoryInterface" class="Sentry\SentryBundle\Transport\TransportFactory">
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="Sentry\State\HubInterface" class="Sentry\State\HubInterface">
      <call method="bindClient">
        <argument type="service" id="sentry.client"/>
      </call>
      <factory class="Sentry\State\HubAdapter" method="getInstance"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\ConsoleListener" class="Sentry\SentryBundle\EventListener\ConsoleListener">
      <tag name="kernel.event_listener" event="console.command" method="handleConsoleCommandEvent" priority="128"/>
      <tag name="kernel.event_listener" event="console.terminate" method="handleConsoleTerminateEvent" priority="-64"/>
      <tag name="kernel.event_listener" event="console.error" method="handleConsoleErrorEvent" priority="-64"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument>true</argument>
    </service>
    <service id="Sentry\SentryBundle\EventListener\ErrorListener" class="Sentry\SentryBundle\EventListener\ErrorListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="handleExceptionEvent" priority="128"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\RequestListener" class="Sentry\SentryBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="handleKernelRequestEvent" priority="5"/>
      <tag name="kernel.event_listener" event="kernel.controller" method="handleKernelControllerEvent" priority="10"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\SubRequestListener" class="Sentry\SentryBundle\EventListener\SubRequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="handleKernelRequestEvent" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.finish_request" method="handleKernelFinishRequestEvent" priority="5"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\TracingRequestListener" class="Sentry\SentryBundle\EventListener\TracingRequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="handleKernelRequestEvent" priority="4"/>
      <tag name="kernel.event_listener" event="kernel.response" method="handleKernelResponseEvent" priority="15"/>
      <tag name="kernel.event_listener" event="kernel.terminate" method="handleKernelTerminateEvent" priority="5"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\TracingSubRequestListener" class="Sentry\SentryBundle\EventListener\TracingSubRequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="handleKernelRequestEvent" priority="2"/>
      <tag name="kernel.event_listener" event="kernel.finish_request" method="handleKernelFinishRequestEvent" priority="10"/>
      <tag name="kernel.event_listener" event="kernel.response" method="handleKernelResponseEvent" priority="15"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\TracingConsoleListener" class="Sentry\SentryBundle\EventListener\TracingConsoleListener">
      <tag name="kernel.event_listener" event="console.command" method="handleConsoleCommandEvent" priority="118"/>
      <tag name="kernel.event_listener" event="console.terminate" method="handleConsoleTerminateEvent" priority="-54"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="collection">
        <argument>messenger:consume</argument>
      </argument>
    </service>
    <service id="Sentry\SentryBundle\Command\SentryTestCommand" class="Sentry\SentryBundle\Command\SentryTestCommand">
      <tag name="console.command" command="sentry:test"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>sentry:test</argument>
      </call>
    </service>
    <service id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverConnectionFactory" class="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverConnectionFactory">
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverMiddleware" class="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverMiddleware">
      <argument type="service" id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverConnectionFactory"/>
    </service>
    <service id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\ConnectionConfigurator" class="Sentry\SentryBundle\Tracing\Doctrine\DBAL\ConnectionConfigurator">
      <argument type="service" id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverMiddleware"/>
    </service>
    <service id="Sentry\SentryBundle\Tracing\Twig\TwigTracingExtension" class="Sentry\SentryBundle\Tracing\Twig\TwigTracingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="sentry.tracing.traceable_cache_adapter" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter" abstract="true">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument></argument>
    </service>
    <service id="sentry.tracing.traceable_tag_aware_cache_adapter" class="Sentry\SentryBundle\Tracing\Cache\TraceableTagAwareCacheAdapter" abstract="true">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument></argument>
    </service>
    <service id="Sentry\Integration\RequestFetcherInterface" class="Sentry\SentryBundle\Integration\RequestFetcher">
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="Sentry\SentryBundle\Twig\SentryExtension" class="Sentry\SentryBundle\Twig\SentryExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="sentry.client.options" class="Sentry\Options">
      <argument type="collection">
        <argument key="integrations" type="collection">
          <argument type="service" id="Sentry\Integration\IgnoreErrorsIntegration"/>
          <argument type="service">
            <service class="Sentry\Integration\RequestIntegration">
              <argument type="service" id="Sentry\Integration\RequestFetcherInterface"/>
            </service>
          </argument>
        </argument>
        <argument key="prefixes" type="collection">
          <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
          <argument>.</argument>
          <argument>/usr/share/php</argument>
        </argument>
        <argument key="trace_propagation_targets" type="collection"/>
        <argument key="environment">dev</argument>
        <argument key="release">1.0.0+no-version-set@{no ref</argument>
        <argument key="tags" type="collection"/>
        <argument key="in_app_exclude" type="collection">
          <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</argument>
          <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev</argument>
          <argument>/home/usuario/domjudge-8.2.3/webapp/vendor</argument>
        </argument>
        <argument key="in_app_include" type="collection"/>
        <argument key="class_serializers" type="collection"/>
        <argument key="dsn">%env(SENTRY_DSN)%</argument>
      </argument>
    </service>
    <service id="sentry.client" class="Sentry\Client">
      <factory method="getClient">
        <service class="Sentry\ClientBuilder">
          <argument type="service" id="sentry.client.options"/>
          <call method="setSdkIdentifier">
            <argument>sentry.php.symfony</argument>
          </call>
          <call method="setSdkVersion">
            <argument>4.5.0</argument>
          </call>
          <call method="setTransportFactory">
            <argument type="service" id="Sentry\Transport\TransportFactoryInterface"/>
          </call>
          <call method="setSerializer">
            <argument type="service">
              <service class="Sentry\Serializer\Serializer">
                <argument type="service" id="sentry.client.options"/>
              </service>
            </argument>
          </call>
          <call method="setRepresentationSerializer">
            <argument type="service">
              <service class="Sentry\Serializer\RepresentationSerializer">
                <argument type="service" id="sentry.client.options"/>
              </service>
            </argument>
          </call>
          <call method="setLogger">
            <argument type="service" id="Psr\Log\NullLogger" on-invalid="ignore"/>
          </call>
        </service>
      </factory>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CallApiActionCommand" class="App\Command\CallApiActionCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CallApiActionCommand" class="App\Command\CallApiActionCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\LoadDefaultDataCommand" class="App\Command\LoadDefaultDataCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\LoadDefaultDataCommand" class="App\Command\LoadDefaultDataCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\LoadDevelopmentDataCommand" class="App\Command\LoadDevelopmentDataCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\LoadDevelopmentDataCommand" class="App\Command\LoadDevelopmentDataCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\LoadGatlingDataCommand" class="App\Command\LoadGatlingDataCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\LoadGatlingDataCommand" class="App\Command\LoadGatlingDataCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\AccessController" class="App\Controller\API\AccessController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\AccessController" class="App\Controller\API\AccessController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\AccessController" class="App\Controller\API\AccessController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\AccountController" class="App\Controller\API\AccountController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\AccountController" class="App\Controller\API\AccountController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\AccountController" class="App\Controller\API\AccountController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\MetricsController" class="App\Controller\API\MetricsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\MetricsController" class="App\Controller\API\MetricsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\MetricsController" class="App\Controller\API\MetricsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\CreateQuizController" class="App\Controller\Jury\CreateQuizController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\CreateQuizController" class="App\Controller\Jury\CreateQuizController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\CreateQuizController" class="App\Controller\Jury\CreateQuizController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ExternalContestController" class="App\Controller\Jury\ExternalContestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ExternalContestController" class="App\Controller\Jury\ExternalContestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ExternalContestController" class="App\Controller\Jury\ExternalContestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\QueueTaskController" class="App\Controller\Jury\QueueTaskController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\QueueTaskController" class="App\Controller\Jury\QueueTaskController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\QueueTaskController" class="App\Controller\Jury\QueueTaskController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RootController" class="App\Controller\RootController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RootController" class="App\Controller\RootController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RootController" class="App\Controller\RootController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\ExecutableFixture" class="App\DataFixtures\DefaultData\ExecutableFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\ExecutableFixture" class="App\DataFixtures\DefaultData\ExecutableFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\LanguageFixture" class="App\DataFixtures\DefaultData\LanguageFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\LanguageFixture" class="App\DataFixtures\DefaultData\LanguageFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\RoleFixture" class="App\DataFixtures\DefaultData\RoleFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\RoleFixture" class="App\DataFixtures\DefaultData\RoleFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\TeamCategoryFixture" class="App\DataFixtures\DefaultData\TeamCategoryFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\TeamCategoryFixture" class="App\DataFixtures\DefaultData\TeamCategoryFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\TeamFixture" class="App\DataFixtures\DefaultData\TeamFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\TeamFixture" class="App\DataFixtures\DefaultData\TeamFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\DefaultData\UserFixture" class="App\DataFixtures\DefaultData\UserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\DefaultData\UserFixture" class="App\DataFixtures\DefaultData\UserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExampleData\JudgehostFixture" class="App\DataFixtures\ExampleData\JudgehostFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExampleData\JudgehostFixture" class="App\DataFixtures\ExampleData\JudgehostFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExampleData\TeamAffiliationFixture" class="App\DataFixtures\ExampleData\TeamAffiliationFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExampleData\TeamAffiliationFixture" class="App\DataFixtures\ExampleData\TeamAffiliationFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExampleData\TeamCategoryFixture" class="App\DataFixtures\ExampleData\TeamCategoryFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExampleData\TeamCategoryFixture" class="App\DataFixtures\ExampleData\TeamCategoryFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExampleData\TeamFixture" class="App\DataFixtures\ExampleData\TeamFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExampleData\TeamFixture" class="App\DataFixtures\ExampleData\TeamFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExampleData\UserFixture" class="App\DataFixtures\ExampleData\UserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExampleData\UserFixture" class="App\DataFixtures\ExampleData\UserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\AddMoreDemoUsersFixture" class="App\DataFixtures\Test\AddMoreDemoUsersFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\AddMoreDemoUsersFixture" class="App\DataFixtures\Test\AddMoreDemoUsersFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\AddProblemAttachmentFixture" class="App\DataFixtures\Test\AddProblemAttachmentFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\AddProblemAttachmentFixture" class="App\DataFixtures\Test\AddProblemAttachmentFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\BalloonCorrectSubmissionFixture" class="App\DataFixtures\Test\BalloonCorrectSubmissionFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\BalloonCorrectSubmissionFixture" class="App\DataFixtures\Test\BalloonCorrectSubmissionFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\BalloonUserFixture" class="App\DataFixtures\Test\BalloonUserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\BalloonUserFixture" class="App\DataFixtures\Test\BalloonUserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\ClarificationFixture" class="App\DataFixtures\Test\ClarificationFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\ClarificationFixture" class="App\DataFixtures\Test\ClarificationFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\ContestTimeFixture" class="App\DataFixtures\Test\ContestTimeFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\ContestTimeFixture" class="App\DataFixtures\Test\ContestTimeFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoNonPublicContestFixture" class="App\DataFixtures\Test\DemoNonPublicContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoNonPublicContestFixture" class="App\DataFixtures\Test\DemoNonPublicContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPostDeactivateContestFixture" class="App\DataFixtures\Test\DemoPostDeactivateContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPostDeactivateContestFixture" class="App\DataFixtures\Test\DemoPostDeactivateContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreActivationContestFixture" class="App\DataFixtures\Test\DemoPreActivationContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreActivationContestFixture" class="App\DataFixtures\Test\DemoPreActivationContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreDeactivateContestFixture" class="App\DataFixtures\Test\DemoPreDeactivateContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreDeactivateContestFixture" class="App\DataFixtures\Test\DemoPreDeactivateContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreEndContestFixture" class="App\DataFixtures\Test\DemoPreEndContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreEndContestFixture" class="App\DataFixtures\Test\DemoPreEndContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreFreezeContestFixture" class="App\DataFixtures\Test\DemoPreFreezeContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreFreezeContestFixture" class="App\DataFixtures\Test\DemoPreFreezeContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreStartContestFixture" class="App\DataFixtures\Test\DemoPreStartContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreStartContestFixture" class="App\DataFixtures\Test\DemoPreStartContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DemoPreUnfreezeContestFixture" class="App\DataFixtures\Test\DemoPreUnfreezeContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DemoPreUnfreezeContestFixture" class="App\DataFixtures\Test\DemoPreUnfreezeContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\DummyProblemFixture" class="App\DataFixtures\Test\DummyProblemFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\DummyProblemFixture" class="App\DataFixtures\Test\DummyProblemFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\EnableJavaEntrypointFixture" class="App\DataFixtures\Test\EnableJavaEntrypointFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\EnableJavaEntrypointFixture" class="App\DataFixtures\Test\EnableJavaEntrypointFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\EnableKotlinFixture" class="App\DataFixtures\Test\EnableKotlinFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\EnableKotlinFixture" class="App\DataFixtures\Test\EnableKotlinFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\EnableSelfregisterFixture" class="App\DataFixtures\Test\EnableSelfregisterFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\EnableSelfregisterFixture" class="App\DataFixtures\Test\EnableSelfregisterFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" class="App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" class="App\DataFixtures\Test\EnableSelfregisterSecondCategoryFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" class="App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" class="App\DataFixtures\Test\ExtendDemoPracticeSessionTimeFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\ExtraJudgehostFixture" class="App\DataFixtures\Test\ExtraJudgehostFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\ExtraJudgehostFixture" class="App\DataFixtures\Test\ExtraJudgehostFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\LockedContestFixture" class="App\DataFixtures\Test\LockedContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\LockedContestFixture" class="App\DataFixtures\Test\LockedContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\RejudgingStatesFixture" class="App\DataFixtures\Test\RejudgingStatesFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\RejudgingStatesFixture" class="App\DataFixtures\Test\RejudgingStatesFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" class="App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" class="App\DataFixtures\Test\RemoveTeamFromAdminUserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" class="App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" class="App\DataFixtures\Test\RemoveTeamFromDemoUserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleAffiliationsFixture" class="App\DataFixtures\Test\SampleAffiliationsFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleAffiliationsFixture" class="App\DataFixtures\Test\SampleAffiliationsFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleEventsFixture" class="App\DataFixtures\Test\SampleEventsFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleEventsFixture" class="App\DataFixtures\Test\SampleEventsFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleSubmissionsFixture" class="App\DataFixtures\Test\SampleSubmissionsFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleSubmissionsFixture" class="App\DataFixtures\Test\SampleSubmissionsFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" class="App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" class="App\DataFixtures\Test\SampleSubmissionsInBucketsFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" class="App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" class="App\DataFixtures\Test\SampleSubmissionsMultipleTriesFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" class="App\DataFixtures\Test\SampleSubmissionsThreeTriesCorrectSameLanguageFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\Test\SelfRegisteredUserFixture" class="App\DataFixtures\Test\SelfRegisteredUserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\Test\SelfRegisteredUserFixture" class="App\DataFixtures\Test\SelfRegisteredUserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\AddContentSecurityPolicyListener" class="App\EventListener\AddContentSecurityPolicyListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\AddContentSecurityPolicyListener" class="App\EventListener\AddContentSecurityPolicyListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\AddCurrentContestListener" class="App\EventListener\AddCurrentContestListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\AddCurrentContestListener" class="App\EventListener\AddCurrentContestListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeExtensionInterface.0.App\Form\Extension\IconButtonExtension" class="App\Form\Extension\IconButtonExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Extension\IconButtonExtension" class="App\Form\Extension\IconButtonExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExternalContestSourceType" class="App\Form\Type\ExternalContestSourceType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExternalContestSourceType" class="App\Form\Type\ExternalContestSourceType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExternalSourceWarningsFilterType" class="App\Form\Type\ExternalSourceWarningsFilterType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExternalSourceWarningsFilterType" class="App\Form\Type\ExternalSourceWarningsFilterType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ICPCCmsType" class="App\Form\Type\ICPCCmsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ICPCCmsType" class="App\Form\Type\ICPCCmsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemAttachmentType" class="App\Form\Type\ProblemAttachmentType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemAttachmentType" class="App\Form\Type\ProblemAttachmentType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemsImportType" class="App\Form\Type\ProblemsImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemsImportType" class="App\Form\Type\ProblemsImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SubmissionsFilterType" class="App\Form\Type\SubmissionsFilterType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SubmissionsFilterType" class="App\Form\Type\SubmissionsFilterType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Monolog\Processor\ProcessorInterface.0.App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\TeamAffiliationVisitor" class="App\Serializer\TeamAffiliationVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\TeamAffiliationVisitor" class="App\Serializer\TeamAffiliationVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\TeamVisitor" class="App\Serializer\TeamVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\TeamVisitor" class="App\Serializer\TeamVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\Handler\SubscribingHandlerInterface.0.fos_rest.serializer.flatten_exception_handler" class="App\FosRestBundle\FlattenExceptionHandler" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.fos_rest.serializer.flatten_exception_handler" class="App\FosRestBundle\FlattenExceptionHandler" public="true" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.gSv9zYw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:auth" description="Creates a Guard authenticator of different flavors"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a Guard authenticator of different flavors</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:command" description="Creates a new console command class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new console command class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:controller" description="Creates a new controller class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new controller class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:crud" description="Creates CRUD for Doctrine entity class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
      <call method="setDescription">
        <argument>Creates CRUD for Doctrine entity class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:docker:database" description="Adds a database container to your docker-compose.yaml file"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
      <call method="setDescription">
        <argument>Adds a database container to your docker-compose.yaml file</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:entity" description="Creates or updates a Doctrine entity class, and optionally an API Platform resource"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
      <call method="setDescription">
        <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:fixtures" description="Creates a new class to load Doctrine fixtures"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new class to load Doctrine fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:form" description="Creates a new form class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new form class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:message" description="Creates a new message and handler"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new message and handler</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:messenger-middleware" description="Creates a new messenger middleware"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new messenger middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:registration-form" description="Creates a new registration form system"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new registration form system</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:reset-password" description="Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
      <call method="setDescription">
        <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:encoder" description="Creates a new serializer encoder class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer encoder class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:serializer:normalizer" description="Creates a new serializer normalizer class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new serializer normalizer class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:subscriber" description="Creates a new event subscriber class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new event subscriber class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:twig-extension" description="Creates a new Twig extension class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Twig extension class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:test" description="Creates a new test class"/>
      <tag name="console.command" command="make:unit-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="console.command" command="make:functional-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:test</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:unit-test</argument>
          <argument>make:functional-test</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new test class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:validator" description="Creates a new validator and constraint class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new validator and constraint class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:voter" description="Creates a new security voter class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security voter class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:user" description="Creates a new security user class"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new security user class</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:migration" description="Creates a new migration based on database changes"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new migration based on database changes</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_stimulus_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand">
      <tag name="console.command" command="make:stimulus-controller" description="Creates a new Stimulus controller"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_stimulus_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:stimulus-controller</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new Stimulus controller</argument>
      </call>
    </service>
    <service id=".service_locator.mJttM4i" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Doctrine\HashPasswordSubscriber" type="service_closure" id="App\Doctrine\HashPasswordSubscriber"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="doctrine.dbal.default_schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.default_regex_schema_filter"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logging_middleware.default" class="Doctrine\DBAL\Logging\Middleware">
      <argument type="service" id="monolog.logger.doctrine"/>
    </service>
    <service id="doctrine.dbal.debug_middleware.default" class="Doctrine\Bundle\DoctrineBundle\Middleware\DebugMiddleware">
      <argument type="service" id="doctrine.debug_data_holder"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
      <call method="setConnectionName">
        <argument>default</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.model_describers.form" class="Nelmio\ApiDocBundle\ModelDescriber\FormModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="100"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.nelmio_api_doc" class="Symfony\Bridge\Monolog\Logger">
      <argument>nelmio_api_doc</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event-feed-importer" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>event-feed-importer</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.event_feed_importer"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.xUrKPVU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.3drNImG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="violations" type="service_closure" id=".errored..service_locator.3drNImG.Symfony\Component\Validator\ConstraintViolationListInterface"/>
      </argument>
    </service>
    <service id=".service_locator.foPrRcS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="viewhandler" type="service_closure" id="fos_rest.view_handler.default"/>
      </argument>
    </service>
    <service id=".service_locator._avS4ji" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="balloonService" type="service_closure" id="App\Service\BalloonService"/>
      </argument>
    </service>
    <service id=".service_locator.zjQkmuM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="validator" type="service_closure" id="debug.validator"/>
      </argument>
    </service>
    <service id=".service_locator.rymUgiq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
        <argument key="metadataFactory" type="service_closure" id="jms_serializer.traceable_metadata_factory"/>
      </argument>
    </service>
    <service id=".service_locator.hEP.bQU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="importExport" type="service_closure" id="App\Service\ImportExportService"/>
      </argument>
    </service>
    <service id=".service_locator.p02vx.n" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="team" type="service_closure" id=".errored..service_locator.p02vx.n.App\Entity\Team"/>
      </argument>
    </service>
    <service id=".service_locator.BkDHJO_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="problem" type="service_closure" id=".errored..service_locator.BkDHJO_.App\Entity\Problem"/>
      </argument>
    </service>
    <service id=".service_locator.OwwN9rk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventLogService" type="service_closure" id="App\Service\EventLogService"/>
      </argument>
    </service>
    <service id=".value.zrvvYJt" class="mixed">
      <argument type="collection">
        <argument>/home/usuario/domjudge-8.2.3/webapp</argument>
      </argument>
      <factory function="current"/>
    </service>
    <service id=".value._URn8Zd" class="mixed">
      <argument type="collection">
        <argument>/home/usuario/domjudge-8.2.3/webapp/var/log</argument>
      </argument>
      <factory function="current"/>
    </service>
    <service id=".service_locator.AS9Xuov" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logsDir" type="service_closure" id=".value._URn8Zd"/>
        <argument key="projectDir" type="service_closure" id=".value.zrvvYJt"/>
      </argument>
    </service>
    <service id=".service_locator.QFrTj0_" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="profiler" type="service_closure" id="profiler" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.bYwR8h3" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.apcvcaf" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="scoreboardService" type="service_closure" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".service_locator.h38XcmU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="submissionService" type="service_closure" id="App\Service\SubmissionService"/>
      </argument>
    </service>
    <service id=".service_locator.0D4zvCT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="profiler" type="service_closure" id="profiler" on-invalid="ignore"/>
        <argument key="rejudgingService" type="service_closure" id="App\Service\RejudgingService"/>
      </argument>
    </service>
    <service id=".service_locator.gmGa92U" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formFactory" type="service_closure" id="form.factory"/>
      </argument>
    </service>
    <service id=".service_locator.Kh2RVIp" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jid" type="service_closure" id=".errored..service_locator.Kh2RVIp.App\Entity\Judging"/>
      </argument>
    </service>
    <service id=".service_locator.WUxE3Mo" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="debugPackage" type="service_closure" id=".errored..service_locator.WUxE3Mo.App\Entity\DebugPackage"/>
      </argument>
    </service>
    <service id=".service_locator.qL.u2I5" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jid" type="service_closure" id=".errored..service_locator.qL.u2I5.App\Entity\Judging"/>
        <argument key="jrid" type="service_closure" id=".errored..service_locator.qL.u2I5.App\Entity\JudgingRun"/>
      </argument>
    </service>
    <service id=".service_locator.UO8bUeW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="externalJudgement" type="service_closure" id=".errored..service_locator.UO8bUeW.App\Entity\ExternalJudgement"/>
      </argument>
    </service>
    <service id=".service_locator.1htcX.C" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="contest" type="service_closure" id=".errored..service_locator.1htcX.C.App\Entity\Contest"/>
        <argument key="run" type="service_closure" id=".errored..service_locator.1htcX.C.App\Entity\JudgingRun"/>
        <argument key="submission" type="service_closure" id=".errored..service_locator.1htcX.C.App\Entity\Submission"/>
      </argument>
    </service>
    <service id=".service_locator.9DUN5ZN" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="submission" type="service_closure" id=".errored..service_locator.9DUN5ZN.App\Entity\Submission"/>
      </argument>
    </service>
    <service id=".service_locator.C5Nw_G6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventLogService" type="service_closure" id="App\Service\EventLogService"/>
        <argument key="scoreboardService" type="service_closure" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".service_locator.hIAw2T4" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="balloonService" type="service_closure" id="App\Service\BalloonService"/>
        <argument key="eventLogService" type="service_closure" id="App\Service\EventLogService"/>
        <argument key="scoreboardService" type="service_closure" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".service_locator.XOIQ.OM" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectDir" type="service_closure" id=".value.zrvvYJt"/>
      </argument>
    </service>
    <service id=".service_locator.y8Ozs6E" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="scoreboardService" type="service_closure" id="App\Service\ScoreboardService"/>
        <argument key="submissionService" type="service_closure" id="App\Service\SubmissionService"/>
      </argument>
    </service>
    <service id=".service_locator.4t3VraJ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service_closure" id=".errored..service_locator.4t3VraJ.Symfony\Component\Form\FormInterface"/>
        <argument key="user" type="service_closure" id=".errored..service_locator.4t3VraJ.App\Entity\User"/>
      </argument>
    </service>
    <service id=".value.w53kaXi" class="mixed">
      <argument type="collection">
        <argument>/home/usuario/domjudge-8.2.3/lib/vendor</argument>
      </argument>
      <factory function="current"/>
    </service>
    <service id=".service_locator.Ev3pD8s" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectDir" type="service_closure" id=".value.zrvvYJt"/>
        <argument key="requestStack" type="service_closure" id="request_stack"/>
        <argument key="vendorDir" type="service_closure" id=".value.w53kaXi"/>
      </argument>
    </service>
    <service id=".service_locator.61a254L" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authorizationChecker" type="service_closure" id="security.authorization_checker"/>
      </argument>
    </service>
    <service id=".service_locator.n29pDwx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authUtils" type="service_closure" id="security.authentication_utils"/>
        <argument key="authorizationChecker" type="service_closure" id="security.authorization_checker"/>
      </argument>
    </service>
    <service id=".service_locator.B5sxPgL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authorizationChecker" type="service_closure" id="security.authorization_checker"/>
        <argument key="passwordHasher" type="service_closure" id="security.user_password_hasher"/>
      </argument>
    </service>
    <service id=".service_locator.LF61re9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator..GixoYd" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\API\AccessController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AccessController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\AccountController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AccountController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\AwardsController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AwardsController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\BalloonController::listAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\API\BalloonController::markDoneAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\API\BalloonController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\BalloonController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ClarificationController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ClarificationController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ContestController::getEventFeedAction" type="service_closure" id=".service_locator.rymUgiq"/>
        <argument key="App\Controller\API\ContestController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ContestController::setBannerAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\ContestController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ExecutableController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\GeneralInfoController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\GroupController::addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\GroupController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\GroupController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgehostController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgementController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\JudgementController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgementTypeController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\JudgementTypeController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\LanguageController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\LanguageController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\MetricsController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\OrganizationController::addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\OrganizationController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\OrganizationController::setLogoAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\OrganizationController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ProblemController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ProblemController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\RunController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\RunController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ScoreboardController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ScoreboardController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\SubmissionController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\SubmissionController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\TeamController::addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\TeamController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\TeamController::setPhotoAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\TeamController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\UserController::responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\UserController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\Jury\AnalysisController::problemAction" type="service_closure" id=".service_locator.BkDHJO_"/>
        <argument key="App\Controller\Jury\AnalysisController::teamAction" type="service_closure" id=".service_locator.p02vx.n"/>
        <argument key="App\Controller\Jury\BalloonController::indexAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\Jury\BalloonController::setDoneAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\Jury\ConfigController::checkAction" type="service_closure" id=".service_locator.AS9Xuov"/>
        <argument key="App\Controller\Jury\ConfigController::indexAction" type="service_closure" id=".service_locator.OwwN9rk"/>
        <argument key="App\Controller\Jury\InternalErrorController::handleAction" type="service_closure" id=".service_locator.QFrTj0_"/>
        <argument key="App\Controller\Jury\JudgehostController::disableAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JudgehostController::enableAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JuryMiscController::changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JuryMiscController::refreshCacheAction" type="service_closure" id=".service_locator.apcvcaf"/>
        <argument key="App\Controller\Jury\LanguageController::viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\ProblemController::viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\RejudgingController::addAction" type="service_closure" id=".service_locator.gmGa92U"/>
        <argument key="App\Controller\Jury\RejudgingController::finishAction" type="service_closure" id=".service_locator.0D4zvCT"/>
        <argument key="App\Controller\Jury\RejudgingController::viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\SubmissionController::downloadFullDebug" type="service_closure" id=".service_locator.WUxE3Mo"/>
        <argument key="App\Controller\Jury\SubmissionController::editSourceAction" type="service_closure" id=".service_locator.9DUN5ZN"/>
        <argument key="App\Controller\Jury\SubmissionController::requestFullDebug" type="service_closure" id=".service_locator.Kh2RVIp"/>
        <argument key="App\Controller\Jury\SubmissionController::requestOutput" type="service_closure" id=".service_locator.qL.u2I5"/>
        <argument key="App\Controller\Jury\SubmissionController::sourceAction" type="service_closure" id=".service_locator.9DUN5ZN"/>
        <argument key="App\Controller\Jury\SubmissionController::teamOutputAction" type="service_closure" id=".service_locator.1htcX.C"/>
        <argument key="App\Controller\Jury\SubmissionController::updateStatusAction" type="service_closure" id=".service_locator.C5Nw_G6"/>
        <argument key="App\Controller\Jury\SubmissionController::verifyAction" type="service_closure" id=".service_locator.hIAw2T4"/>
        <argument key="App\Controller\Jury\SubmissionController::verifyShadowDifferenceAction" type="service_closure" id=".service_locator.OwwN9rk"/>
        <argument key="App\Controller\Jury\SubmissionController::viewForExternalJudgementAction" type="service_closure" id=".service_locator.UO8bUeW"/>
        <argument key="App\Controller\Jury\SubmissionController::viewForJudgingAction" type="service_closure" id=".service_locator.Kh2RVIp"/>
        <argument key="App\Controller\Jury\TeamAffiliationController::indexAction" type="service_closure" id=".service_locator.XOIQ.OM"/>
        <argument key="App\Controller\Jury\TeamAffiliationController::viewAction" type="service_closure" id=".service_locator.apcvcaf"/>
        <argument key="App\Controller\Jury\TeamCategoryController::viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\TeamController::viewAction" type="service_closure" id=".service_locator.y8Ozs6E"/>
        <argument key="App\Controller\Jury\UserController::checkPasswordLength" type="service_closure" id=".service_locator.4t3VraJ"/>
        <argument key="App\Controller\Jury\UserController::viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\PublicController::changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\PublicController::scoreboardDataZipAction" type="service_closure" id=".service_locator.Ev3pD8s"/>
        <argument key="App\Controller\RootController::redirectAction" type="service_closure" id=".service_locator.61a254L"/>
        <argument key="App\Controller\SecurityController::loginAction" type="service_closure" id=".service_locator.n29pDwx"/>
        <argument key="App\Controller\SecurityController::registerAction" type="service_closure" id=".service_locator.B5sxPgL"/>
        <argument key="App\Controller\Team\MiscController::changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="App\Controller\API\AccessController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AccessController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\AccountController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AccountController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\AwardsController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\AwardsController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\BalloonController:listAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\API\BalloonController:markDoneAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\API\BalloonController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\BalloonController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ClarificationController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ClarificationController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ContestController:getEventFeedAction" type="service_closure" id=".service_locator.rymUgiq"/>
        <argument key="App\Controller\API\ContestController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ContestController:setBannerAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\ContestController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ExecutableController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\GeneralInfoController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\GroupController:addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\GroupController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\GroupController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgehostController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgementController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\JudgementController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\JudgementTypeController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\JudgementTypeController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\LanguageController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\LanguageController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\MetricsController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\OrganizationController:addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\OrganizationController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\OrganizationController:setLogoAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\OrganizationController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ProblemController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ProblemController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\RunController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\RunController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\ScoreboardController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\ScoreboardController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\SubmissionController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\SubmissionController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\TeamController:addAction" type="service_closure" id=".service_locator.hEP.bQU"/>
        <argument key="App\Controller\API\TeamController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\TeamController:setPhotoAction" type="service_closure" id=".service_locator.zjQkmuM"/>
        <argument key="App\Controller\API\TeamController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\API\UserController:responseForErrors" type="service_closure" id=".service_locator.3drNImG"/>
        <argument key="App\Controller\API\UserController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Controller\Jury\AnalysisController:problemAction" type="service_closure" id=".service_locator.BkDHJO_"/>
        <argument key="App\Controller\Jury\AnalysisController:teamAction" type="service_closure" id=".service_locator.p02vx.n"/>
        <argument key="App\Controller\Jury\BalloonController:indexAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\Jury\BalloonController:setDoneAction" type="service_closure" id=".service_locator._avS4ji"/>
        <argument key="App\Controller\Jury\ConfigController:checkAction" type="service_closure" id=".service_locator.AS9Xuov"/>
        <argument key="App\Controller\Jury\ConfigController:indexAction" type="service_closure" id=".service_locator.OwwN9rk"/>
        <argument key="App\Controller\Jury\InternalErrorController:handleAction" type="service_closure" id=".service_locator.QFrTj0_"/>
        <argument key="App\Controller\Jury\JudgehostController:disableAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JudgehostController:enableAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JuryMiscController:changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\Jury\JuryMiscController:refreshCacheAction" type="service_closure" id=".service_locator.apcvcaf"/>
        <argument key="App\Controller\Jury\LanguageController:viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\ProblemController:viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\RejudgingController:addAction" type="service_closure" id=".service_locator.gmGa92U"/>
        <argument key="App\Controller\Jury\RejudgingController:finishAction" type="service_closure" id=".service_locator.0D4zvCT"/>
        <argument key="App\Controller\Jury\RejudgingController:viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\SubmissionController:downloadFullDebug" type="service_closure" id=".service_locator.WUxE3Mo"/>
        <argument key="App\Controller\Jury\SubmissionController:editSourceAction" type="service_closure" id=".service_locator.9DUN5ZN"/>
        <argument key="App\Controller\Jury\SubmissionController:requestFullDebug" type="service_closure" id=".service_locator.Kh2RVIp"/>
        <argument key="App\Controller\Jury\SubmissionController:requestOutput" type="service_closure" id=".service_locator.qL.u2I5"/>
        <argument key="App\Controller\Jury\SubmissionController:sourceAction" type="service_closure" id=".service_locator.9DUN5ZN"/>
        <argument key="App\Controller\Jury\SubmissionController:teamOutputAction" type="service_closure" id=".service_locator.1htcX.C"/>
        <argument key="App\Controller\Jury\SubmissionController:updateStatusAction" type="service_closure" id=".service_locator.C5Nw_G6"/>
        <argument key="App\Controller\Jury\SubmissionController:verifyAction" type="service_closure" id=".service_locator.hIAw2T4"/>
        <argument key="App\Controller\Jury\SubmissionController:verifyShadowDifferenceAction" type="service_closure" id=".service_locator.OwwN9rk"/>
        <argument key="App\Controller\Jury\SubmissionController:viewForExternalJudgementAction" type="service_closure" id=".service_locator.UO8bUeW"/>
        <argument key="App\Controller\Jury\SubmissionController:viewForJudgingAction" type="service_closure" id=".service_locator.Kh2RVIp"/>
        <argument key="App\Controller\Jury\TeamAffiliationController:indexAction" type="service_closure" id=".service_locator.XOIQ.OM"/>
        <argument key="App\Controller\Jury\TeamAffiliationController:viewAction" type="service_closure" id=".service_locator.apcvcaf"/>
        <argument key="App\Controller\Jury\TeamCategoryController:viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\Jury\TeamController:viewAction" type="service_closure" id=".service_locator.y8Ozs6E"/>
        <argument key="App\Controller\Jury\UserController:checkPasswordLength" type="service_closure" id=".service_locator.4t3VraJ"/>
        <argument key="App\Controller\Jury\UserController:viewAction" type="service_closure" id=".service_locator.h38XcmU"/>
        <argument key="App\Controller\PublicController:changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="App\Controller\PublicController:scoreboardDataZipAction" type="service_closure" id=".service_locator.Ev3pD8s"/>
        <argument key="App\Controller\RootController:redirectAction" type="service_closure" id=".service_locator.61a254L"/>
        <argument key="App\Controller\SecurityController:loginAction" type="service_closure" id=".service_locator.n29pDwx"/>
        <argument key="App\Controller\SecurityController:registerAction" type="service_closure" id=".service_locator.B5sxPgL"/>
        <argument key="App\Controller\Team\MiscController:changeContestAction" type="service_closure" id=".service_locator.bYwR8h3"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
      </argument>
    </service>
    <service id=".service_locator.kmI3eav" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Validator\Constraints\CountryValidator" type="service_closure" id="App\Validator\Constraints\CountryValidator"/>
        <argument key="App\Validator\Constraints\IdentifierValidator" type="service_closure" id="App\Validator\Constraints\IdentifierValidator"/>
        <argument key="App\Validator\Constraints\TimeStringValidator" type="service_closure" id="App\Validator\Constraints\TimeStringValidator"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.lLv4pWF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.L7dBXaL" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\Type\AbstractExternalIdEntityType" type="service_closure" id="App\Form\Type\AbstractExternalIdEntityType"/>
        <argument key="App\Form\Type\BootstrapFileType" type="service_closure" id="App\Form\Type\BootstrapFileType"/>
        <argument key="App\Form\Type\ContestExportType" type="service_closure" id="App\Form\Type\ContestExportType"/>
        <argument key="App\Form\Type\ContestImportType" type="service_closure" id="App\Form\Type\ContestImportType"/>
        <argument key="App\Form\Type\ContestProblemType" type="service_closure" id="App\Form\Type\ContestProblemType"/>
        <argument key="App\Form\Type\ContestType" type="service_closure" id="App\Form\Type\ContestType"/>
        <argument key="App\Form\Type\ExecutableType" type="service_closure" id="App\Form\Type\ExecutableType"/>
        <argument key="App\Form\Type\ExecutableUploadType" type="service_closure" id="App\Form\Type\ExecutableUploadType"/>
        <argument key="App\Form\Type\ExternalContestSourceType" type="service_closure" id="App\Form\Type\ExternalContestSourceType"/>
        <argument key="App\Form\Type\ExternalSourceWarningsFilterType" type="service_closure" id="App\Form\Type\ExternalSourceWarningsFilterType"/>
        <argument key="App\Form\Type\FinalizeContestType" type="service_closure" id="App\Form\Type\FinalizeContestType"/>
        <argument key="App\Form\Type\GeneratePasswordsType" type="service_closure" id="App\Form\Type\GeneratePasswordsType"/>
        <argument key="App\Form\Type\ICPCCmsType" type="service_closure" id="App\Form\Type\ICPCCmsType"/>
        <argument key="App\Form\Type\JsonImportType" type="service_closure" id="App\Form\Type\JsonImportType"/>
        <argument key="App\Form\Type\JudgehostType" type="service_closure" id="App\Form\Type\JudgehostType"/>
        <argument key="App\Form\Type\JudgehostsType" type="service_closure" id="App\Form\Type\JudgehostsType"/>
        <argument key="App\Form\Type\LanguageType" type="service_closure" id="App\Form\Type\LanguageType"/>
        <argument key="App\Form\Type\PrintType" type="service_closure" id="App\Form\Type\PrintType"/>
        <argument key="App\Form\Type\ProblemAttachmentType" type="service_closure" id="App\Form\Type\ProblemAttachmentType"/>
        <argument key="App\Form\Type\ProblemType" type="service_closure" id="App\Form\Type\ProblemType"/>
        <argument key="App\Form\Type\ProblemUploadType" type="service_closure" id="App\Form\Type\ProblemUploadType"/>
        <argument key="App\Form\Type\ProblemsImportType" type="service_closure" id="App\Form\Type\ProblemsImportType"/>
        <argument key="App\Form\Type\RejudgingType" type="service_closure" id="App\Form\Type\RejudgingType"/>
        <argument key="App\Form\Type\RemovedIntervalType" type="service_closure" id="App\Form\Type\RemovedIntervalType"/>
        <argument key="App\Form\Type\SubmissionsFilterType" type="service_closure" id="App\Form\Type\SubmissionsFilterType"/>
        <argument key="App\Form\Type\SubmitProblemType" type="service_closure" id="App\Form\Type\SubmitProblemType"/>
        <argument key="App\Form\Type\TeamAffiliationType" type="service_closure" id="App\Form\Type\TeamAffiliationType"/>
        <argument key="App\Form\Type\TeamCategoryType" type="service_closure" id="App\Form\Type\TeamCategoryType"/>
        <argument key="App\Form\Type\TeamClarificationType" type="service_closure" id="App\Form\Type\TeamClarificationType"/>
        <argument key="App\Form\Type\TeamType" type="service_closure" id="App\Form\Type\TeamType"/>
        <argument key="App\Form\Type\TsvImportType" type="service_closure" id="App\Form\Type\TsvImportType"/>
        <argument key="App\Form\Type\UserRegistrationType" type="service_closure" id="App\Form\Type\UserRegistrationType"/>
        <argument key="App\Form\Type\UserType" type="service_closure" id="App\Form\Type\UserType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <argument type="service" id=".debug.http_client.inner"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.listener.csrf_protection" class="Symfony\Component\Security\Http\EventListener\CsrfProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <tag name="default">jms_serializer.instance</tag>
      <argument type="service" id="fos_rest.serializer.form_error_handler.inner"/>
    </service>
    <service id="cache.doctrine.orm.default.result.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.traceable.recorder_inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.traceable.recorder_inner"/>
    </service>
    <service id="cache.app.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.traceable.recorder_inner"/>
    </service>
    <service id="cache.system.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.traceable.recorder_inner"/>
    </service>
    <service id="cache.validator.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.traceable.recorder_inner"/>
    </service>
    <service id="cache.serializer.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.traceable.recorder_inner"/>
    </service>
    <service id="cache.annotations.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.traceable.recorder_inner"/>
    </service>
    <service id="cache.property_info.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.traceable.recorder_inner"/>
    </service>
    <service id="cache.validator_expression_language.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator_expression_language.traceable.recorder_inner"/>
    </service>
    <service id="cache.security_expression_language.traceable" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.traceable.recorder_inner"/>
    </service>
    <service id=".sentry.traceable.http_client" class="Sentry\SentryBundle\Tracing\HttpClient\TraceableHttpClient">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="http_client.client"/>
      <argument type="service" id=".debug.http_client"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id=".service_locator.7F_Lccs" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="fos_rest.view_handler" type="service_closure" id="fos_rest.view_handler.default"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\AccessController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\AccessController"/>
      <argument>App\Controller\API\AccessController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\AccountController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\AccountController"/>
      <argument>App\Controller\API\AccountController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\AwardsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\AwardsController"/>
      <argument>App\Controller\API\AwardsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\BalloonController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\BalloonController"/>
      <argument>App\Controller\API\BalloonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\ClarificationController"/>
      <argument>App\Controller\API\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\ContestController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\ContestController"/>
      <argument>App\Controller\API\ContestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\ExecutableController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\ExecutableController"/>
      <argument>App\Controller\API\ExecutableController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\GeneralInfoController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\GeneralInfoController"/>
      <argument>App\Controller\API\GeneralInfoController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\GroupController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\GroupController"/>
      <argument>App\Controller\API\GroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\JudgehostController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgehostController"/>
      <argument>App\Controller\API\JudgehostController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\JudgementController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgementController"/>
      <argument>App\Controller\API\JudgementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\JudgementTypeController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgementTypeController"/>
      <argument>App\Controller\API\JudgementTypeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\LanguageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\LanguageController"/>
      <argument>App\Controller\API\LanguageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\MetricsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\MetricsController"/>
      <argument>App\Controller\API\MetricsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\OrganizationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\OrganizationController"/>
      <argument>App\Controller\API\OrganizationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\ProblemController"/>
      <argument>App\Controller\API\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\RunController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\RunController"/>
      <argument>App\Controller\API\RunController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\ScoreboardController"/>
      <argument>App\Controller\API\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\SubmissionController"/>
      <argument>App\Controller\API\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\TeamController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\TeamController"/>
      <argument>App\Controller\API\TeamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.7F_Lccs.App\Controller\API\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\API\UserController"/>
      <argument>App\Controller\API\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.7F_Lccs" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\AnalysisController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\AnalysisController"/>
      <argument>App\Controller\Jury\AnalysisController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\AuditLogController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\AuditLogController"/>
      <argument>App\Controller\Jury\AuditLogController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\BalloonController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\BalloonController"/>
      <argument>App\Controller\Jury\BalloonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ClarificationController"/>
      <argument>App\Controller\Jury\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.MHEFf7Z" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.MHEFf7Z.App\Controller\Jury\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ConfigController"/>
      <argument>App\Controller\Jury\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.MHEFf7Z" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ContestController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ContestController"/>
      <argument>App\Controller\Jury\ContestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\CreateQuizController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\CreateQuizController"/>
      <argument>App\Controller\Jury\CreateQuizController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ExecutableController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ExecutableController"/>
      <argument>App\Controller\Jury\ExecutableController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ExternalContestController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ExternalContestController"/>
      <argument>App\Controller\Jury\ExternalContestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ImportExportController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ImportExportController"/>
      <argument>App\Controller\Jury\ImportExportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\InternalErrorController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\InternalErrorController"/>
      <argument>App\Controller\Jury\InternalErrorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\JudgehostController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\JudgehostController"/>
      <argument>App\Controller\Jury\JudgehostController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\JuryMiscController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\JuryMiscController"/>
      <argument>App\Controller\Jury\JuryMiscController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\LanguageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\LanguageController"/>
      <argument>App\Controller\Jury\LanguageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\PrintController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\PrintController"/>
      <argument>App\Controller\Jury\PrintController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ProblemController"/>
      <argument>App\Controller\Jury\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\QueueTaskController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\QueueTaskController"/>
      <argument>App\Controller\Jury\QueueTaskController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\RejudgingController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\RejudgingController"/>
      <argument>App\Controller\Jury\RejudgingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ScoreboardController"/>
      <argument>App\Controller\Jury\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\ShadowDifferencesController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ShadowDifferencesController"/>
      <argument>App\Controller\Jury\ShadowDifferencesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\SubmissionController"/>
      <argument>App\Controller\Jury\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.dBKW74W" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.dBKW74W.App\Controller\Jury\TeamAffiliationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamAffiliationController"/>
      <argument>App\Controller\Jury\TeamAffiliationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.dBKW74W" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\TeamCategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamCategoryController"/>
      <argument>App\Controller\Jury\TeamCategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\TeamController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamController"/>
      <argument>App\Controller\Jury\TeamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Jury\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Jury\UserController"/>
      <argument>App\Controller\Jury\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.5QJi0SZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.5QJi0SZ.App\Controller\PublicController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\PublicController"/>
      <argument>App\Controller\PublicController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.5QJi0SZ" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\RootController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\RootController"/>
      <argument>App\Controller\RootController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\SecurityController"/>
      <argument>App\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Team\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Team\ClarificationController"/>
      <argument>App\Controller\Team\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Team\MiscController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Team\MiscController"/>
      <argument>App\Controller\Team\MiscController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Team\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Team\ProblemController"/>
      <argument>App\Controller\Team\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Team\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Team\ScoreboardController"/>
      <argument>App\Controller\Team\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.9hK1Zku.App\Controller\Team\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Controller\Team\SubmissionController"/>
      <argument>App\Controller\Team\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.9hK1Zku" method="withContext"/>
    </service>
    <service id=".service_locator.aNklfos" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.aNklfos.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.aNklfos" method="withContext"/>
    </service>
    <service id=".service_locator.UIzyiU0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.UIzyiU0.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.UIzyiU0" method="withContext"/>
    </service>
    <service id=".service_locator.oCg4uHe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.oCg4uHe.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.oCg4uHe" method="withContext"/>
    </service>
    <service id=".service_locator.v.Wwsjy" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.v.Wwsjy.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.v.Wwsjy" method="withContext"/>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.8milwyw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.api" type="service_closure" id="security.event_dispatcher.api"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="security.event_dispatcher.main"/>
        <argument key="security.event_dispatcher.metrics" type="service_closure" id="security.event_dispatcher.metrics"/>
      </argument>
    </service>
    <service id=".service_locator.XWmhzGa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.Kr.dDlB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
      </argument>
    </service>
    <service id=".service_locator.GVyCdgr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service_closure" id=".session.do-not-use" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.do-not-use" on-invalid="ignore"/>
        <argument key="session_collector" type="service_closure" id="data_collector.request.session_collector" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.nLgZj7R" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id=".debug.http_client.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver.inner" class="Metadata\Driver\DriverChain">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.doctrine_object_constructor.inner" class="JMS\Serializer\Construction\UnserializeObjectConstructor"/>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="debug.security.firewall.authenticator.api.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.api"/>
    </service>
    <service id="debug.security.firewall.authenticator.metrics.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.metrics"/>
    </service>
    <service id="debug.security.firewall.authenticator.main.inner" class="Symfony\Component\Security\Http\Firewall\AuthenticatorManagerListener">
      <argument type="service" id="security.authenticator.manager.main"/>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <argument type="service" id=".service_locator..GixoYd"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <argument type="service" id=".service_locator..GixoYd"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler.inner" class="JMS\Serializer\Handler\FormErrorHandler">
      <argument>null</argument>
      <argument>validators</argument>
    </service>
    <service id="cache.doctrine.orm.default.result.traceable.inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.query.traceable.inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.app.traceable.inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument>6tT92u51uL</argument>
      <argument>0</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>w1kYIH7OpN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>0cOkWdGDcy</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>ayUnCeIKGE</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>cPSqGn0Yw4</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>8QHalks6Jf</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator_expression_language.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>EP+Xl4eytX</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.traceable.inner" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <argument>Ng5nq0fsXN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/usuario/domjudge-8.2.3/webapp/var/cache/dev/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="jms_serializer.traceable_metadata_factory.inner" class="Metadata\MetadataFactory">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
      <call method="setIncludeInterfaces">
        <argument>false</argument>
      </call>
    </service>
    <service id="jms_serializer.traceable_handler_registry.inner" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="jms_serializer.handler_registry.service_locator"/>
    </service>
    <service id="jms_serializer.metadata.traceable_file_locator.inner" class="Metadata\Driver\FileLocator">
      <argument type="collection"/>
    </service>
    <service id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.3drNImG.Symfony\Component\Validator\ConstraintViolationListInterface" class="Symfony\Component\Validator\ConstraintViolationListInterface"/>
    <service id=".errored..service_locator.p02vx.n.App\Entity\Team" class="App\Entity\Team"/>
    <service id=".errored..service_locator.BkDHJO_.App\Entity\Problem" class="App\Entity\Problem"/>
    <service id=".errored..service_locator.Kh2RVIp.App\Entity\Judging" class="App\Entity\Judging"/>
    <service id=".errored..service_locator.WUxE3Mo.App\Entity\DebugPackage" class="App\Entity\DebugPackage"/>
    <service id=".errored..service_locator.qL.u2I5.App\Entity\Judging" class="App\Entity\Judging"/>
    <service id=".errored..service_locator.qL.u2I5.App\Entity\JudgingRun" class="App\Entity\JudgingRun"/>
    <service id=".errored..service_locator.UO8bUeW.App\Entity\ExternalJudgement" class="App\Entity\ExternalJudgement"/>
    <service id=".errored..service_locator.1htcX.C.App\Entity\Contest" class="App\Entity\Contest"/>
    <service id=".errored..service_locator.1htcX.C.App\Entity\JudgingRun" class="App\Entity\JudgingRun"/>
    <service id=".errored..service_locator.1htcX.C.App\Entity\Submission" class="App\Entity\Submission"/>
    <service id=".errored..service_locator.9DUN5ZN.App\Entity\Submission" class="App\Entity\Submission"/>
    <service id=".errored..service_locator.4t3VraJ.Symfony\Component\Form\FormInterface" class="Symfony\Component\Form\FormInterface"/>
    <service id=".errored..service_locator.4t3VraJ.App\Entity\User" class="App\Entity\User"/>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:encode-password</argument>
      <argument type="collection"/>
      <argument>Encode a password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_encoder"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".var_dumper.command.server_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:dump</argument>
      <argument type="collection"/>
      <argument>Start a dump server that collects and displays dumps in a single place</argument>
      <argument>false</argument>
      <argument type="service_closure" id="var_dumper.command.server_dump"/>
    </service>
    <service id=".monolog.command.server_log.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:log</argument>
      <argument type="collection"/>
      <argument>Start a log server that displays logs in real time</argument>
      <argument>false</argument>
      <argument type="service_closure" id="monolog.command.server_log"/>
    </service>
    <service id=".maker.auto_command.make_auth.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:auth</argument>
      <argument type="collection"/>
      <argument>Creates a Guard authenticator of different flavors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_auth"/>
    </service>
    <service id=".maker.auto_command.make_command.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:command</argument>
      <argument type="collection"/>
      <argument>Creates a new console command class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_command"/>
    </service>
    <service id=".maker.auto_command.make_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:controller</argument>
      <argument type="collection"/>
      <argument>Creates a new controller class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_controller"/>
    </service>
    <service id=".maker.auto_command.make_crud.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:crud</argument>
      <argument type="collection"/>
      <argument>Creates CRUD for Doctrine entity class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_crud"/>
    </service>
    <service id=".maker.auto_command.make_docker_database.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:docker:database</argument>
      <argument type="collection"/>
      <argument>Adds a database container to your docker-compose.yaml file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_docker_database"/>
    </service>
    <service id=".maker.auto_command.make_entity.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:entity</argument>
      <argument type="collection"/>
      <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_entity"/>
    </service>
    <service id=".maker.auto_command.make_fixtures.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:fixtures</argument>
      <argument type="collection"/>
      <argument>Creates a new class to load Doctrine fixtures</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_fixtures"/>
    </service>
    <service id=".maker.auto_command.make_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:form</argument>
      <argument type="collection"/>
      <argument>Creates a new form class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_form"/>
    </service>
    <service id=".maker.auto_command.make_message.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:message</argument>
      <argument type="collection"/>
      <argument>Creates a new message and handler</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_message"/>
    </service>
    <service id=".maker.auto_command.make_messenger_middleware.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:messenger-middleware</argument>
      <argument type="collection"/>
      <argument>Creates a new messenger middleware</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_messenger_middleware"/>
    </service>
    <service id=".maker.auto_command.make_registration_form.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:registration-form</argument>
      <argument type="collection"/>
      <argument>Creates a new registration form system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_registration_form"/>
    </service>
    <service id=".maker.auto_command.make_reset_password.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:reset-password</argument>
      <argument type="collection"/>
      <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_reset_password"/>
    </service>
    <service id=".maker.auto_command.make_serializer_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:encoder</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer encoder class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_encoder"/>
    </service>
    <service id=".maker.auto_command.make_serializer_normalizer.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:serializer:normalizer</argument>
      <argument type="collection"/>
      <argument>Creates a new serializer normalizer class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_serializer_normalizer"/>
    </service>
    <service id=".maker.auto_command.make_subscriber.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:subscriber</argument>
      <argument type="collection"/>
      <argument>Creates a new event subscriber class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_subscriber"/>
    </service>
    <service id=".maker.auto_command.make_twig_extension.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:twig-extension</argument>
      <argument type="collection"/>
      <argument>Creates a new Twig extension class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_twig_extension"/>
    </service>
    <service id=".maker.auto_command.make_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:test</argument>
      <argument type="collection">
        <argument>make:unit-test</argument>
        <argument>make:functional-test</argument>
      </argument>
      <argument>Creates a new test class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_test"/>
    </service>
    <service id=".maker.auto_command.make_validator.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:validator</argument>
      <argument type="collection"/>
      <argument>Creates a new validator and constraint class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_validator"/>
    </service>
    <service id=".maker.auto_command.make_voter.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:voter</argument>
      <argument type="collection"/>
      <argument>Creates a new security voter class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_voter"/>
    </service>
    <service id=".maker.auto_command.make_user.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:user</argument>
      <argument type="collection"/>
      <argument>Creates a new security user class</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_user"/>
    </service>
    <service id=".maker.auto_command.make_migration.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:migration</argument>
      <argument type="collection"/>
      <argument>Creates a new migration based on database changes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_migration"/>
    </service>
    <service id=".maker.auto_command.make_stimulus_controller.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>make:stimulus-controller</argument>
      <argument type="collection"/>
      <argument>Creates a new Stimulus controller</argument>
      <argument>false</argument>
      <argument type="service_closure" id="maker.auto_command.make_stimulus_controller"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.k7voSYu"/>
      <argument type="collection">
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="nelmio:apidoc:dump">nelmio_api_doc.command.dump</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="sentry:test">Sentry\SentryBundle\Command\SentryTestCommand</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:test">maker.auto_command.make_test</argument>
        <argument key="make:unit-test">maker.auto_command.make_test</argument>
        <argument key="make:functional-test">maker.auto_command.make_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
        <argument key="make:stimulus-controller">maker.auto_command.make_stimulus_controller</argument>
      </argument>
    </service>
    <service id=".service_locator.k7voSYu" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="nelmio_api_doc.command.dump" type="service_closure" id="nelmio_api_doc.command.dump"/>
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_encoder" type="service_closure" id=".security.command.user_password_encoder.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command"/>
        <argument key="doctrine.fixtures_load_command" type="service_closure" id="doctrine.fixtures_load_command"/>
        <argument key="var_dumper.command.server_dump" type="service_closure" id=".var_dumper.command.server_dump.lazy"/>
        <argument key="monolog.command.server_log" type="service_closure" id=".monolog.command.server_log.lazy"/>
        <argument key="Sentry\SentryBundle\Command\SentryTestCommand" type="service_closure" id="Sentry\SentryBundle\Command\SentryTestCommand"/>
        <argument key="maker.auto_command.make_auth" type="service_closure" id=".maker.auto_command.make_auth.lazy"/>
        <argument key="maker.auto_command.make_command" type="service_closure" id=".maker.auto_command.make_command.lazy"/>
        <argument key="maker.auto_command.make_controller" type="service_closure" id=".maker.auto_command.make_controller.lazy"/>
        <argument key="maker.auto_command.make_crud" type="service_closure" id=".maker.auto_command.make_crud.lazy"/>
        <argument key="maker.auto_command.make_docker_database" type="service_closure" id=".maker.auto_command.make_docker_database.lazy"/>
        <argument key="maker.auto_command.make_entity" type="service_closure" id=".maker.auto_command.make_entity.lazy"/>
        <argument key="maker.auto_command.make_fixtures" type="service_closure" id=".maker.auto_command.make_fixtures.lazy"/>
        <argument key="maker.auto_command.make_form" type="service_closure" id=".maker.auto_command.make_form.lazy"/>
        <argument key="maker.auto_command.make_message" type="service_closure" id=".maker.auto_command.make_message.lazy"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service_closure" id=".maker.auto_command.make_messenger_middleware.lazy"/>
        <argument key="maker.auto_command.make_registration_form" type="service_closure" id=".maker.auto_command.make_registration_form.lazy"/>
        <argument key="maker.auto_command.make_reset_password" type="service_closure" id=".maker.auto_command.make_reset_password.lazy"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service_closure" id=".maker.auto_command.make_serializer_encoder.lazy"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service_closure" id=".maker.auto_command.make_serializer_normalizer.lazy"/>
        <argument key="maker.auto_command.make_subscriber" type="service_closure" id=".maker.auto_command.make_subscriber.lazy"/>
        <argument key="maker.auto_command.make_twig_extension" type="service_closure" id=".maker.auto_command.make_twig_extension.lazy"/>
        <argument key="maker.auto_command.make_test" type="service_closure" id=".maker.auto_command.make_test.lazy"/>
        <argument key="maker.auto_command.make_validator" type="service_closure" id=".maker.auto_command.make_validator.lazy"/>
        <argument key="maker.auto_command.make_voter" type="service_closure" id=".maker.auto_command.make_voter.lazy"/>
        <argument key="maker.auto_command.make_user" type="service_closure" id=".maker.auto_command.make_user.lazy"/>
        <argument key="maker.auto_command.make_migration" type="service_closure" id=".maker.auto_command.make_migration.lazy"/>
        <argument key="maker.auto_command.make_stimulus_controller" type="service_closure" id=".maker.auto_command.make_stimulus_controller.lazy"/>
      </argument>
    </service>
    <service id="cache.doctrine.orm.default.result.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.doctrine.orm.default.result.traceable.inner"/>
    </service>
    <service id="cache.doctrine.orm.default.query.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.doctrine.orm.default.query.traceable.inner"/>
    </service>
    <service id="cache.app.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.app.traceable.inner"/>
    </service>
    <service id="cache.system.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.system.traceable.inner"/>
    </service>
    <service id="cache.validator.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.validator.traceable.inner"/>
    </service>
    <service id="cache.serializer.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.serializer.traceable.inner"/>
    </service>
    <service id="cache.annotations.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.annotations.traceable.inner"/>
    </service>
    <service id="cache.property_info.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.property_info.traceable.inner"/>
    </service>
    <service id="cache.validator_expression_language.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.validator_expression_language.traceable.inner"/>
    </service>
    <service id="cache.security_expression_language.traceable.recorder_inner" class="Sentry\SentryBundle\Tracing\Cache\TraceableCacheAdapter">
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="cache.security_expression_language.traceable.inner"/>
    </service>
    <service id=".service_locator.J_Re9z7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service_closure" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
        <argument key="Twig\Extra\Markdown\MarkdownRuntime" type="service_closure" id="twig.runtime.markdown"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Prometheus\CollectorRegistry" alias="prometheus_collector_registry_service"/>
    <service id="Metadata\MetadataFactoryInterface" alias="jms_serializer.traceable_metadata_factory"/>
    <service id="Symfony\Component\HttpKernel\Profiler\Profiler" alias="profiler"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result.traceable"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query.traceable"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory"/>
    <service id="jms_serializer.instance.default.event_dispatcher" alias="jms_serializer.event_dispatcher"/>
    <service id="jms_serializer.instance.default.event_dispatcher.service_locator" alias="jms_serializer.event_dispatcher.service_locator"/>
    <service id="jms_serializer.instance.default.doctrine_proxy_subscriber" alias="jms_serializer.doctrine_proxy_subscriber"/>
    <service id="jms_serializer.instance.default.stopwatch_subscriber" alias="jms_serializer.stopwatch_subscriber"/>
    <service id="jms_serializer.instance.default.enum_subscriber" alias="jms_serializer.enum_subscriber"/>
    <service id="jms_serializer.instance.default.handler_registry" alias="jms_serializer.traceable_handler_registry"/>
    <service id="jms_serializer.instance.default.handler_registry.service_locator" alias="jms_serializer.handler_registry.service_locator"/>
    <service id="jms_serializer.instance.default.enum_handler" alias="jms_serializer.enum_handler"/>
    <service id="jms_serializer.instance.default.array_collection_handler" alias="jms_serializer.array_collection_handler"/>
    <service id="jms_serializer.instance.default.constraint_violation_handler" alias="jms_serializer.constraint_violation_handler"/>
    <service id="jms_serializer.instance.default.datetime_handler" alias="jms_serializer.datetime_handler"/>
    <service id="jms_serializer.instance.default.form_error_handler" alias="fos_rest.serializer.form_error_handler"/>
    <service id="jms_serializer.instance.default.iterator_handler" alias="jms_serializer.iterator_handler"/>
    <service id="jms_serializer.instance.default.symfony_uid_handler" alias="jms_serializer.symfony_uid_handler"/>
    <service id="jms_serializer.instance.default.type_parser" alias="jms_serializer.type_parser"/>
    <service id="jms_serializer.instance.default.metadata.file_locator" alias="jms_serializer.metadata.traceable_file_locator"/>
    <service id="jms_serializer.instance.default.metadata.yaml_driver" alias="jms_serializer.metadata.yaml_driver"/>
    <service id="jms_serializer.instance.default.metadata.xml_driver" alias="jms_serializer.metadata.xml_driver"/>
    <service id="jms_serializer.instance.default.metadata.annotation_driver" alias="jms_serializer.metadata.annotation_driver"/>
    <service id="jms_serializer.instance.default.metadata_driver" alias="jms_serializer.metadata.typed_properties_driver"/>
    <service id="jms_serializer.instance.default.metadata.doctrine_type_driver" alias="jms_serializer.metadata.doctrine_type_driver"/>
    <service id="jms_serializer.instance.default.metadata.doctrine_phpcr_type_driver" alias="jms_serializer.metadata.doctrine_phpcr_type_driver"/>
    <service id="jms_serializer.instance.default.metadata.typed_properties_driver" alias="jms_serializer.metadata.typed_properties_driver"/>
    <service id="jms_serializer.instance.default.metadata.enum_driver" alias="jms_serializer.metadata.enum_driver"/>
    <service id="jms_serializer.instance.default.metadata.doc_block_driver" alias="jms_serializer.metadata.doc_block_driver"/>
    <service id="jms_serializer.instance.default.metadata.service_locator" alias="jms_serializer.metadata.service_locator"/>
    <service id="jms_serializer.instance.default.metadata.lazy_loading_driver" alias="jms_serializer.metadata.lazy_loading_driver"/>
    <service id="jms_serializer.instance.default.metadata.cache.file_cache" alias="jms_serializer.metadata.cache.file_cache"/>
    <service id="jms_serializer.instance.default.metadata_factory" alias="jms_serializer.traceable_metadata_factory"/>
    <service id="jms_serializer.instance.default.version_exclusion_strategy" alias="jms_serializer.version_exclusion_strategy"/>
    <service id="jms_serializer.instance.default.camel_case_naming_strategy" alias="jms_serializer.camel_case_naming_strategy"/>
    <service id="jms_serializer.instance.default.identical_property_naming_strategy" alias="jms_serializer.identical_property_naming_strategy"/>
    <service id="jms_serializer.instance.default.serialized_name_annotation_strategy" alias="jms_serializer.serialized_name_annotation_strategy"/>
    <service id="jms_serializer.instance.default.doctrine_object_constructor" alias="jms_serializer.doctrine_object_constructor"/>
    <service id="jms_serializer.instance.default.doctrine_phpcr_object_constructor" alias="jms_serializer.doctrine_phpcr_object_constructor"/>
    <service id="jms_serializer.instance.default.object_constructor" alias="jms_serializer.doctrine_object_constructor"/>
    <service id="jms_serializer.instance.default.serializer" alias="jms_serializer.serializer"/>
    <service id="jms_serializer.instance.default.deserialization_graph_navigator_factory" alias="jms_serializer.deserialization_graph_navigator_factory"/>
    <service id="jms_serializer.instance.default.serialization_graph_navigator_factory" alias="jms_serializer.serialization_graph_navigator_factory"/>
    <service id="jms_serializer.instance.default.expression_evaluator" alias="jms_serializer.expression_evaluator"/>
    <service id="jms_serializer.instance.default.expression_language" alias="jms_serializer.expression_language"/>
    <service id="jms_serializer.instance.default.expression_language.function_provider" alias="jms_serializer.expression_language.function_provider"/>
    <service id="jms_serializer.instance.default.twig_extension.serializer" alias="jms_serializer.twig_extension.serializer"/>
    <service id="jms_serializer.instance.default.twig_extension.runtime_serializer" alias="jms_serializer.twig_extension.runtime_serializer"/>
    <service id="jms_serializer.instance.default.twig_extension.serializer_runtime_helper" alias="jms_serializer.twig_extension.serializer_runtime_helper"/>
    <service id="jms_serializer.instance.default.templating.helper.serializer" alias="jms_serializer.templating.helper.serializer"/>
    <service id="jms_serializer.instance.default.accessor_strategy.default" alias="jms_serializer.accessor_strategy.default"/>
    <service id="jms_serializer.instance.default.json_serialization_visitor" alias="jms_serializer.json_serialization_visitor"/>
    <service id="jms_serializer.instance.default.json_deserialization_visitor" alias="jms_serializer.json_deserialization_visitor"/>
    <service id="jms_serializer.instance.default.xml_serialization_visitor" alias="jms_serializer.xml_serialization_visitor"/>
    <service id="jms_serializer.instance.default.xml_deserialization_visitor" alias="jms_serializer.xml_deserialization_visitor"/>
    <service id="jms_serializer.instance.default.cache.cache_clearer" alias="jms_serializer.cache.cache_clearer"/>
    <service id="jms_serializer.instance.default.cache.cache_warmer" alias="jms_serializer.cache.cache_warmer"/>
    <service id="jms_serializer.instance.default.configured_serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory"/>
    <service id="jms_serializer.instance.default.configured_deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory"/>
    <service id="jms_serializer.instance.default.data_collector" alias="jms_serializer.data_collector"/>
    <service id="jms_serializer.instance.default.traceable_runs_listener" alias="jms_serializer.traceable_runs_listener"/>
    <service id="jms_serializer.instance.default.traceable_metadata_factory" alias="jms_serializer.traceable_metadata_factory"/>
    <service id="jms_serializer.instance.default.traceable_handler_registry" alias="jms_serializer.traceable_handler_registry"/>
    <service id="jms_serializer.instance.default.metadata.traceable_file_locator" alias="jms_serializer.metadata.traceable_file_locator"/>
    <service id="jms_serializer.instances.default" alias="jms_serializer.serializer" public="true"/>
    <service id="nelmio_api_doc.controller.swagger" alias="nelmio_api_doc.controller.swagger_json" public="true"/>
    <service id="nelmio_api_doc.generator" alias="nelmio_api_doc.generator.default" public="true"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="fos_rest.error_renderer.serializer"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app.traceable"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app.traceable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app.traceable"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".sentry.traceable.http_client"/>
    <service id="Psr\Http\Client\ClientInterface" alias="psr18.http_client"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias=".session.do-not-use">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" and "SessionInterface" aliases are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="SessionHandlerInterface" alias="session.abstract_handler"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag"/>
    <service id="session.storage.factory" alias="session.storage.factory.native"/>
    <service id="session.handler" alias="session.abstract_handler"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Twig_Environment" alias="twig"/>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher"" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Http\Authentication\UserAuthenticatorInterface" alias="security.user_authenticator"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.user_providers" alias="security.user.provider.concrete.domjudge_db_provider"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.domjudge_db_provider"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="App\Security\UserChecker"/>
    <service id="security.authentication.session_strategy.metrics" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.metrics" alias="App\Security\UserChecker"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="App\Security\UserChecker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.LlG0ewc"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="Sentry\ClientInterface" alias="sentry.client"/>
    <service id="Sentry\SentryBundle\EventListener\ConsoleCommandListener" alias="Sentry\SentryBundle\EventListener\ConsoleListener"/>
    <service id="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverConnectionFactoryInterface" alias="Sentry\SentryBundle\Tracing\Doctrine\DBAL\TracingDriverConnectionFactory"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.gSv9zYw" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="jms_serializer.authorization_checker" alias="security.authorization_checker" public="true"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $nelmioApiDocLogger" alias="monolog.logger.nelmio_api_doc"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $eventFeedImporterLogger" alias="monolog.logger.event-feed-importer"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator..GixoYd"/>
    <service id="session" alias=".session.do-not-use" public="true">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" service and "SessionInterface" alias are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.jms"/>
    <service id=".service_locator.dvfUIQY" alias="jms_serializer.event_dispatcher.service_locator"/>
    <service id=".service_locator.kU_9bh." alias="jms_serializer.handler_registry.service_locator"/>
    <service id=".service_locator.13qzyLC" alias="jms_serializer.metadata.service_locator"/>
    <service id=".service_locator.9L433w3" alias="nelmio_api_doc.generator_locator"/>
    <service id=".service_locator.bGyrHSP" alias=".service_locator.LlG0ewc"/>
    <service id=".service_locator.0GV1BZZ" alias=".service_locator.gSv9zYw"/>
    <service id=".service_locator.PdF3WVw" alias=".service_locator.mJttM4i"/>
    <service id=".service_locator.KjM3LuJ" alias=".service_locator.rymUgiq"/>
    <service id=".service_locator.n_qLu96" alias=".service_locator.AS9Xuov"/>
    <service id=".service_locator.i1mgzJI" alias=".service_locator.0D4zvCT"/>
    <service id=".service_locator.wbhx8ff" alias=".service_locator.1htcX.C"/>
    <service id=".service_locator.ojLp6Wi" alias=".service_locator.hIAw2T4"/>
    <service id=".service_locator.EW4PtNR" alias=".service_locator.4t3VraJ"/>
    <service id=".service_locator.KDZcDGx" alias=".service_locator.Ev3pD8s"/>
    <service id=".service_locator.hvKPzqk" alias=".service_locator.n29pDwx"/>
    <service id=".service_locator.yal57pW" alias=".service_locator..GixoYd"/>
    <service id=".service_locator.aZclXCi" alias=".service_locator.kmI3eav"/>
    <service id=".service_locator.kz5qa4Y" alias=".service_locator.L7dBXaL"/>
    <service id=".service_locator.u3Rpopr" alias=".service_locator.7F_Lccs"/>
    <service id=".service_locator.wq_yxjK" alias=".service_locator.9hK1Zku"/>
    <service id=".service_locator.OvQ8E5l" alias=".service_locator.MHEFf7Z"/>
    <service id=".service_locator.pQhdO5C" alias=".service_locator.dBKW74W"/>
    <service id=".service_locator.iNgMw54" alias=".service_locator.5QJi0SZ"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="http_client" alias=".sentry.traceable.http_client"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.typed_properties_driver"/>
    <service id="jms_serializer.metadata.typed_properties_driver.inner" alias="jms_serializer.metadata.doctrine_type_driver"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="security.firewall.authenticator.api" alias="debug.security.firewall.authenticator.api"/>
    <service id="security.firewall.authenticator.metrics" alias="debug.security.firewall.authenticator.metrics"/>
    <service id="security.firewall.authenticator.main" alias="debug.security.firewall.authenticator.main"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller"/>
    <service id="jms_serializer.form_error_handler" alias="fos_rest.serializer.form_error_handler"/>
    <service id="cache.doctrine.orm.default.result" alias="cache.doctrine.orm.default.result.traceable"/>
    <service id="cache.doctrine.orm.default.query" alias="cache.doctrine.orm.default.query.traceable"/>
    <service id="cache.app" alias="cache.app.traceable" public="true"/>
    <service id="cache.system" alias="cache.system.traceable" public="true"/>
    <service id="cache.validator" alias="cache.validator.traceable"/>
    <service id="cache.serializer" alias="cache.serializer.traceable"/>
    <service id="cache.annotations" alias="cache.annotations.traceable"/>
    <service id="cache.property_info" alias="cache.property_info.traceable"/>
    <service id="cache.validator_expression_language" alias="cache.validator_expression_language.traceable" public="true"/>
    <service id="cache.security_expression_language" alias="cache.security_expression_language.traceable"/>
    <service id=".sentry.traceable.http_client.inner" alias=".debug.http_client"/>
    <service id="jms_serializer.metadata_factory" alias="jms_serializer.traceable_metadata_factory"/>
    <service id="jms_serializer.handler_registry" alias="jms_serializer.traceable_handler_registry"/>
    <service id="jms_serializer.metadata.file_locator" alias="jms_serializer.metadata.traceable_file_locator"/>
    <service id=".service_locator.uo5c0SP" alias=".service_locator.xUrKPVU"/>
    <service id=".service_locator.Y7yEX6b" alias=".service_locator.3drNImG"/>
    <service id=".service_locator.NYeE_LH" alias=".service_locator.foPrRcS"/>
    <service id=".service_locator.Jjdb8II" alias=".service_locator._avS4ji"/>
    <service id=".service_locator.hVj713g" alias=".service_locator.zjQkmuM"/>
    <service id=".service_locator.zRLEdav" alias=".service_locator.rymUgiq"/>
    <service id=".service_locator.spnpHfI" alias=".service_locator.hEP.bQU"/>
    <service id=".service_locator.M1252OE" alias=".service_locator.p02vx.n"/>
    <service id=".service_locator.mG4mRpJ" alias=".service_locator.BkDHJO_"/>
    <service id=".service_locator.djaPn1j" alias=".service_locator.OwwN9rk"/>
    <service id=".service_locator.GhYrfyh" alias=".service_locator.QFrTj0_"/>
    <service id=".service_locator..3IJEwt" alias=".service_locator.bYwR8h3"/>
    <service id=".service_locator.4_XUUiJ" alias=".service_locator.apcvcaf"/>
    <service id=".service_locator.hXuuPkM" alias=".service_locator.h38XcmU"/>
    <service id=".service_locator.qDL8upd" alias=".service_locator.0D4zvCT"/>
    <service id=".service_locator.bCxBT6y" alias=".service_locator.gmGa92U"/>
    <service id=".service_locator.3.mlRYb" alias=".service_locator.Kh2RVIp"/>
    <service id=".service_locator.FuWCgXV" alias=".service_locator.WUxE3Mo"/>
    <service id=".service_locator.bsQrKil" alias=".service_locator.qL.u2I5"/>
    <service id=".service_locator.INH0VnT" alias=".service_locator.UO8bUeW"/>
    <service id=".service_locator.Nbo1qKc" alias=".service_locator.1htcX.C"/>
    <service id=".service_locator.OBshhbV" alias=".service_locator.9DUN5ZN"/>
    <service id=".service_locator.Tb.6gin" alias=".service_locator.C5Nw_G6"/>
    <service id=".service_locator.ZvDmvRJ" alias=".service_locator.hIAw2T4"/>
    <service id=".service_locator.dCZRGIm" alias=".service_locator.y8Ozs6E"/>
    <service id=".service_locator.U2ZLXdX" alias=".service_locator.4t3VraJ"/>
    <service id=".service_locator.iQiJW3C" alias=".service_locator.Ev3pD8s"/>
    <service id=".service_locator.Rx07VHo" alias=".service_locator.61a254L"/>
    <service id=".service_locator.30heZYY" alias=".service_locator.n29pDwx"/>
    <service id=".service_locator.MmJAbbd" alias=".service_locator.B5sxPgL"/>
    <service id=".service_locator.Z_NHUnh" alias=".service_locator.7F_Lccs"/>
    <service id=".service_locator.dFdPUPD" alias=".service_locator.9hK1Zku"/>
    <service id=".service_locator.EBn34uf" alias=".service_locator.MHEFf7Z"/>
    <service id=".service_locator.0qwmE3s" alias=".service_locator.dBKW74W"/>
    <service id=".service_locator.JsLpkvD" alias=".service_locator.5QJi0SZ"/>
    <service id=".service_locator.1lWP9Yo" alias=".service_locator.8milwyw"/>
    <service id=".service_locator.L0rFhJm" alias=".service_locator.GVyCdgr"/>
    <service id=".service_locator.aa1PbBb" alias=".service_locator.nLgZj7R"/>
    <service id="console.command.public_alias.App\Command\CallApiActionCommand" alias="App\Command\CallApiActionCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" alias="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ImportEventFeedCommand" alias="App\Command\ImportEventFeedCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\LoadDefaultDataCommand" alias="App\Command\LoadDefaultDataCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\LoadDevelopmentDataCommand" alias="App\Command\LoadDevelopmentDataCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\LoadExampleDataCommand" alias="App\Command\LoadExampleDataCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\LoadGatlingDataCommand" alias="App\Command\LoadGatlingDataCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ResetUserPasswordCommand" alias="App\Command\ResetUserPasswordCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ScoreboardMergeCommand" alias="App\Command\ScoreboardMergeCommand" public="true"/>
  </services>
</container>
